['model.account.account.create_chart_account.account.fields_view_get', 'model.account.account.create_chart_account.account.fields_get', 'model.account.account.create_chart_account.account.default_get', 'model.account.account.template-account.tax.template.search', 'model.account.account.template-account.tax.template.export_data', 'model.account.account.template-account.tax.template.search_read', 'model.account.account.template-account.tax.template.import_data', 'model.account.account.template-account.tax.template.create', 'model.account.account.template-account.tax.template.write', 'model.account.account.template-account.tax.template.read', 'model.account.account.template-account.tax.template.search_count', 'model.account.account.template-account.tax.template.copy', 'model.account.account.template-account.tax.template.fields_get', 'model.account.account.template-account.tax.template.default_get', 'model.account.account.template-account.tax.template.delete', 'model.ir.translation.update.init.get_language', 'model.ir.translation.update.init.fields_view_get', 'model.ir.translation.update.init.fields_get', 'model.ir.translation.update.init.default_get', 'model.account.account.print_general_ledger.init.on_change_fiscalyear', 'model.account.account.print_general_ledger.init.fields_view_get', 'model.account.account.print_general_ledger.init.fields_get', 'model.account.account.print_general_ledger.init.default_get', 'model.account.account.search', 'model.account.account.fields_view_get', 'model.account.account.export_data', 'model.account.account.search_read', 'model.account.account.import_data', 'model.account.account.create', 'model.account.account.write', 'model.account.account.read', 'model.account.account.search_count', 'model.account.account.copy', 'model.account.account.fields_get', 'model.account.account.default_get', 'model.account.account.delete', 'model.ir.trigger.export_data', 'model.ir.trigger.search', 'model.ir.trigger.fields_view_get', 'model.ir.trigger.on_change_on_time', 'model.ir.trigger.search_read', 'model.ir.trigger.import_data', 'model.ir.trigger.create', 'model.ir.trigger.on_change_on_delete', 'model.ir.trigger.write', 'model.ir.trigger.read', 'model.ir.trigger.search_count', 'model.ir.trigger.on_change_on_write', 'model.ir.trigger.on_change_on_create', 'model.ir.trigger.copy', 'model.ir.trigger.fields_get', 'model.ir.trigger.default_get', 'model.ir.trigger.delete', 'model.product.template-supplier-account.tax.search', 'model.product.template-supplier-account.tax.export_data', 'model.product.template-supplier-account.tax.search_read', 'model.product.template-supplier-account.tax.import_data', 'model.product.template-supplier-account.tax.create', 'model.product.template-supplier-account.tax.write', 'model.product.template-supplier-account.tax.read', 'model.product.template-supplier-account.tax.search_count', 'model.product.template-supplier-account.tax.copy', 'model.product.template-supplier-account.tax.fields_get', 'model.product.template-supplier-account.tax.default_get', 'model.product.template-supplier-account.tax.delete', 'model.account.invoice.payment_term.line.type.search', 'model.account.invoice.payment_term.line.type.fields_view_get', 'model.account.invoice.payment_term.line.type.export_data', 'model.account.invoice.payment_term.line.type.search_read', 'model.account.invoice.payment_term.line.type.import_data', 'model.account.invoice.payment_term.line.type.create', 'model.account.invoice.payment_term.line.type.write', 'model.account.invoice.payment_term.line.type.read', 'model.account.invoice.payment_term.line.type.search_count', 'model.account.invoice.payment_term.line.type.copy', 'model.account.invoice.payment_term.line.type.fields_get', 'model.account.invoice.payment_term.line.type.default_get', 'model.account.invoice.payment_term.line.type.delete', 'model.ir.translation.set_report.start.fields_view_get', 'model.ir.translation.set_report.start.fields_get', 'model.ir.translation.set_report.start.default_get', 'model.ir.action.wizard_size.search', 'model.ir.action.wizard_size.fields_view_get', 'model.ir.action.wizard_size.export_data', 'model.ir.action.wizard_size.search_read', 'model.ir.action.wizard_size.import_data', 'model.ir.action.wizard_size.create', 'model.ir.action.wizard_size.write', 'model.ir.action.wizard_size.read', 'model.ir.action.wizard_size.search_count', 'model.ir.action.wizard_size.set_size', 'model.ir.action.wizard_size.copy', 'model.ir.action.wizard_size.fields_get', 'model.ir.action.wizard_size.default_get', 'model.ir.action.wizard_size.delete', 'model.ir.action.search', 'model.ir.action.fields_view_get', 'model.ir.action.get_action_id', 'model.ir.action.export_data', 'model.ir.action.search_read', 'model.ir.action.import_data', 'model.ir.action.create', 'model.ir.action.write', 'model.ir.action.read', 'model.ir.action.search_count', 'model.ir.action.copy', 'model.ir.action.fields_get', 'model.ir.action.default_get', 'model.ir.action.delete', 'model.sale.configuration.search', 'model.sale.configuration.fields_view_get', 'model.sale.configuration.export_data', 'model.sale.configuration.search_read', 'model.sale.configuration.import_data', 'model.sale.configuration.create', 'model.sale.configuration.write', 'model.sale.configuration.read', 'model.sale.configuration.search_count', 'model.sale.configuration.copy', 'model.sale.configuration.fields_get', 'model.sale.configuration.default_get', 'model.sale.configuration.delete', 'model.sale.sale-ignored-account.invoice.search', 'model.sale.sale-ignored-account.invoice.export_data', 'model.sale.sale-ignored-account.invoice.search_read', 'model.sale.sale-ignored-account.invoice.import_data', 'model.sale.sale-ignored-account.invoice.create', 'model.sale.sale-ignored-account.invoice.write', 'model.sale.sale-ignored-account.invoice.read', 'model.sale.sale-ignored-account.invoice.search_count', 'model.sale.sale-ignored-account.invoice.copy', 'model.sale.sale-ignored-account.invoice.fields_get', 'model.sale.sale-ignored-account.invoice.default_get', 'model.sale.sale-ignored-account.invoice.delete', 'model.account.move.search', 'model.account.move.fields_view_get', 'model.account.move.button_draft', 'model.account.move.export_data', 'model.account.move.search_read', 'model.account.move.import_data', 'model.account.move.create', 'model.account.move.write', 'model.account.move.read', 'model.account.move.search_count', 'model.account.move.on_change_with_date', 'model.account.move.button_post', 'model.account.move.copy', 'model.account.move.fields_get', 'model.account.move.default_get', 'model.account.move.delete', 'model.account.invoice.pay_invoice.ask.fields_view_get', 'model.account.invoice.pay_invoice.ask.fields_get', 'model.account.invoice.pay_invoice.ask.default_get', 'model.account.invoice.pay_invoice.ask.on_change_lines', 'model.account.account.open_third_party_balance.init.fields_view_get', 'model.account.account.open_third_party_balance.init.fields_get', 'model.account.account.open_third_party_balance.init.default_get', 'model.ir.action.url.search', 'model.ir.action.url.fields_view_get', 'model.ir.action.url.export_data', 'model.ir.action.url.search_read', 'model.ir.action.url.import_data', 'model.ir.action.url.create', 'model.ir.action.url.write', 'model.ir.action.url.read', 'model.ir.action.url.search_count', 'model.ir.action.url.copy', 'model.ir.action.url.fields_get', 'model.ir.action.url.default_get', 'model.ir.action.url.delete', 'model.party.check_vies.no_check.fields_view_get', 'model.party.check_vies.no_check.fields_get', 'model.party.check_vies.no_check.default_get', 'model.account.journal.type.search', 'model.account.journal.type.fields_view_get', 'model.account.journal.type.export_data', 'model.account.journal.type.search_read', 'model.account.journal.type.import_data', 'model.account.journal.type.create', 'model.account.journal.type.write', 'model.account.journal.type.read', 'model.account.journal.type.search_count', 'model.account.journal.type.copy', 'model.account.journal.type.fields_get', 'model.account.journal.type.default_get', 'model.account.journal.type.delete', 'model.stock.location.search', 'model.stock.location.fields_view_get', 'model.stock.location.export_data', 'model.stock.location.search_read', 'model.stock.location.import_data', 'model.stock.location.create', 'model.stock.location.write', 'model.stock.location.read', 'model.stock.location.search_count', 'model.stock.location.copy', 'model.stock.location.fields_get', 'model.stock.location.default_get', 'model.stock.location.delete', 'model.sale.line.delete', 'model.sale.line.search', 'model.sale.line.fields_view_get', 'model.sale.line.on_change_unit', 'model.sale.line.export_data', 'model.sale.line.search_read', 'model.sale.line.on_change_quantity', 'model.sale.line.create', 'model.sale.line.on_change_with_amount', 'model.sale.line.write', 'model.sale.line.on_change_with_unit_digits', 'model.sale.line.search_count', 'model.sale.line.read', 'model.sale.line.on_change_product', 'model.sale.line.copy', 'model.sale.line.fields_get', 'model.sale.line.default_get', 'model.sale.line.import_data', 'model.account.account.print_trial_balance.init.on_change_fiscalyear', 'model.account.account.print_trial_balance.init.fields_view_get', 'model.account.account.print_trial_balance.init.fields_get', 'model.account.account.print_trial_balance.init.default_get', 'model.stock.inventory.line.search', 'model.stock.inventory.line.fields_view_get', 'model.stock.inventory.line.export_data', 'model.stock.inventory.line.search_read', 'model.stock.inventory.line.import_data', 'model.stock.inventory.line.create', 'model.stock.inventory.line.write', 'model.stock.inventory.line.read', 'model.stock.inventory.line.search_count', 'model.stock.inventory.line.on_change_product', 'model.stock.inventory.line.copy', 'model.stock.inventory.line.fields_get', 'model.stock.inventory.line.default_get', 'model.stock.inventory.line.delete', 'model.ir.sequence.search', 'model.ir.sequence.fields_view_get', 'model.ir.sequence.export_data', 'model.ir.sequence.search_read', 'model.ir.sequence.import_data', 'model.ir.sequence.create', 'model.ir.sequence.write', 'model.ir.sequence.read', 'model.ir.sequence.search_count', 'model.ir.sequence.code_get', 'model.ir.sequence.copy', 'model.ir.sequence.fields_get', 'model.ir.sequence.default_get', 'model.ir.sequence.delete', 'model.account.tax.open_chart_code.init.fields_view_get', 'model.account.tax.open_chart_code.init.fields_get', 'model.account.tax.open_chart_code.init.default_get', 'model.ir.trigger.log.search', 'model.ir.trigger.log.export_data', 'model.ir.trigger.log.search_read', 'model.ir.trigger.log.import_data', 'model.ir.trigger.log.create', 'model.ir.trigger.log.write', 'model.ir.trigger.log.read', 'model.ir.trigger.log.search_count', 'model.ir.trigger.log.copy', 'model.ir.trigger.log.fields_get', 'model.ir.trigger.log.default_get', 'model.ir.trigger.log.delete', 'model.party.contact_mechanism.delete', 'model.party.contact_mechanism.search', 'model.party.contact_mechanism.fields_view_get', 'model.party.contact_mechanism.on_change_other_value', 'model.party.contact_mechanism.export_data', 'model.party.contact_mechanism.search_read', 'model.party.contact_mechanism.fields_get', 'model.party.contact_mechanism.on_change_skype', 'model.party.contact_mechanism.copy', 'model.party.contact_mechanism.write', 'model.party.contact_mechanism.read', 'model.party.contact_mechanism.search_count', 'model.party.contact_mechanism.on_change_value', 'model.party.contact_mechanism.on_change_website', 'model.party.contact_mechanism.create', 'model.party.contact_mechanism.on_change_email', 'model.party.contact_mechanism.default_get', 'model.party.contact_mechanism.on_change_sip', 'model.party.contact_mechanism.import_data', 'model.product.uom.search', 'model.product.uom.fields_view_get', 'model.product.uom.export_data', 'model.product.uom.search_read', 'model.product.uom.import_data', 'model.product.uom.create', 'model.product.uom.on_change_factor', 'model.product.uom.write', 'model.product.uom.read', 'model.product.uom.search_count', 'model.product.uom.on_change_rate', 'model.product.uom.copy', 'model.product.uom.fields_get', 'model.product.uom.default_get', 'model.product.uom.delete', 'model.res.user.get_preferences_fields_view', 'model.res.user.search', 'model.res.user.fields_view_get', 'model.res.user.on_change_main_company', 'model.res.user.export_data', 'model.res.user.search_read', 'model.res.user.timezones', 'model.res.user.create', 'model.res.user.write', 'model.res.user.read', 'model.res.user.search_count', 'model.res.user.get_preferences', 'model.res.user.import_data', 'model.res.user.set_preferences', 'model.res.user.copy', 'model.res.user.fields_get', 'model.res.user.default_get', 'model.res.user.delete', 'model.ir.rule.search', 'model.ir.rule.fields_view_get', 'model.ir.rule.get_operand', 'model.ir.rule.export_data', 'model.ir.rule.search_read', 'model.ir.rule.import_data', 'model.ir.rule.create', 'model.ir.rule.write', 'model.ir.rule.read', 'model.ir.rule.search_count', 'model.ir.rule.copy', 'model.ir.rule.fields_get', 'model.ir.rule.default_get', 'model.ir.rule.delete', 'model.stock.shipment.in.return.search', 'model.stock.shipment.in.return.fields_view_get', 'model.stock.shipment.in.return.button_draft', 'model.stock.shipment.in.return.workflow_trigger_validate', 'model.stock.shipment.in.return.export_data', 'model.stock.shipment.in.return.search_read', 'model.stock.shipment.in.return.import_data', 'model.stock.shipment.in.return.create', 'model.stock.shipment.in.return.write', 'model.stock.shipment.in.return.read', 'model.stock.shipment.in.return.search_count', 'model.stock.shipment.in.return.copy', 'model.stock.shipment.in.return.fields_get', 'model.stock.shipment.in.return.default_get', 'model.stock.shipment.in.return.delete', 'model.account.move.reconciliation.search', 'model.account.move.reconciliation.fields_view_get', 'model.account.move.reconciliation.export_data', 'model.account.move.reconciliation.search_read', 'model.account.move.reconciliation.import_data', 'model.account.move.reconciliation.create', 'model.account.move.reconciliation.write', 'model.account.move.reconciliation.read', 'model.account.move.reconciliation.search_count', 'model.account.move.reconciliation.copy', 'model.account.move.reconciliation.fields_get', 'model.account.move.reconciliation.default_get', 'model.account.move.reconciliation.delete', 'model.ir.action.wizard.search', 'model.ir.action.wizard.fields_view_get', 'model.ir.action.wizard.export_data', 'model.ir.action.wizard.search_read', 'model.ir.action.wizard.import_data', 'model.ir.action.wizard.create', 'model.ir.action.wizard.write', 'model.ir.action.wizard.read', 'model.ir.action.wizard.search_count', 'model.ir.action.wizard.copy', 'model.ir.action.wizard.fields_get', 'model.ir.action.wizard.default_get', 'model.ir.action.wizard.delete', 'model.account.journal.search', 'model.account.journal.fields_view_get', 'model.account.journal.export_data', 'model.account.journal.search_read', 'model.account.journal.import_data', 'model.account.journal.create', 'model.account.journal.get_types', 'model.account.journal.write', 'model.account.journal.read', 'model.account.journal.search_count', 'model.account.journal.copy', 'model.account.journal.fields_get', 'model.account.journal.default_get', 'model.account.journal.delete', 'model.account.account.open_income_statement.init.on_change_fiscalyear', 'model.account.account.open_income_statement.init.fields_view_get', 'model.account.account.open_income_statement.init.fields_get', 'model.account.account.open_income_statement.init.default_get', 'model.sale.line-recreated-stock.move.search', 'model.sale.line-recreated-stock.move.export_data', 'model.sale.line-recreated-stock.move.search_read', 'model.sale.line-recreated-stock.move.import_data', 'model.sale.line-recreated-stock.move.create', 'model.sale.line-recreated-stock.move.write', 'model.sale.line-recreated-stock.move.read', 'model.sale.line-recreated-stock.move.search_count', 'model.sale.line-recreated-stock.move.copy', 'model.sale.line-recreated-stock.move.fields_get', 'model.sale.line-recreated-stock.move.default_get', 'model.sale.line-recreated-stock.move.delete', 'model.ir.translation.set_report.init.fields_view_get', 'model.ir.translation.set_report.init.fields_get', 'model.ir.translation.set_report.init.default_get', 'model.workflow.transition-workflow.instance.search', 'model.workflow.transition-workflow.instance.export_data', 'model.workflow.transition-workflow.instance.search_read', 'model.workflow.transition-workflow.instance.import_data', 'model.workflow.transition-workflow.instance.read', 'model.workflow.transition-workflow.instance.search_count', 'model.workflow.transition-workflow.instance.fields_get', 'model.workflow.transition-workflow.instance.default_get', 'model.ir.model.data.search', 'model.ir.model.data.fields_view_get', 'model.ir.model.data.export_data', 'model.ir.model.data.search_read', 'model.ir.model.data.import_data', 'model.ir.model.data.create', 'model.ir.model.data.write', 'model.ir.model.data.read', 'model.ir.model.data.search_count', 'model.ir.model.data.copy', 'model.ir.model.data.fields_get', 'model.ir.model.data.default_get', 'model.ir.model.data.delete', 'model.ir.rule.group.search', 'model.ir.rule.group.fields_view_get', 'model.ir.rule.group.export_data', 'model.ir.rule.group.search_read', 'model.ir.rule.group.import_data', 'model.ir.rule.group.create', 'model.ir.rule.group.write', 'model.ir.rule.group.read', 'model.ir.rule.group.search_count', 'model.ir.rule.group.copy', 'model.ir.rule.group.fields_get', 'model.ir.rule.group.default_get', 'model.ir.rule.group.delete', 'model.account.account.type.search', 'model.account.account.type.fields_view_get', 'model.account.account.type.export_data', 'model.account.account.type.search_read', 'model.account.account.type.import_data', 'model.account.account.type.create', 'model.account.account.type.write', 'model.account.account.type.read', 'model.account.account.type.search_count', 'model.account.account.type.copy', 'model.account.account.type.fields_get', 'model.account.account.type.default_get', 'model.account.account.type.delete', 'model.account.tax.code.template.search', 'model.account.tax.code.template.fields_view_get', 'model.account.tax.code.template.export_data', 'model.account.tax.code.template.search_read', 'model.account.tax.code.template.import_data', 'model.account.tax.code.template.create', 'model.account.tax.code.template.write', 'model.account.tax.code.template.read', 'model.account.tax.code.template.search_count', 'model.account.tax.code.template.copy', 'model.account.tax.code.template.fields_get', 'model.account.tax.code.template.default_get', 'model.account.tax.code.template.delete', 'model.account.account.deferral.search', 'model.account.account.deferral.fields_view_get', 'model.account.account.deferral.export_data', 'model.account.account.deferral.search_read', 'model.account.account.deferral.import_data', 'model.account.account.deferral.create', 'model.account.account.deferral.write', 'model.account.account.deferral.read', 'model.account.account.deferral.search_count', 'model.account.account.deferral.copy', 'model.account.account.deferral.fields_get', 'model.account.account.deferral.default_get', 'model.account.account.deferral.delete', 'model.party.configuration.search', 'model.party.configuration.fields_view_get', 'model.party.configuration.export_data', 'model.party.configuration.search_read', 'model.party.configuration.import_data', 'model.party.configuration.create', 'model.party.configuration.write', 'model.party.configuration.read', 'model.party.configuration.search_count', 'model.party.configuration.copy', 'model.party.configuration.fields_get', 'model.party.configuration.default_get', 'model.party.configuration.delete', 'model.account.fiscalyear.close_fiscalyear.init.fields_view_get', 'model.account.fiscalyear.close_fiscalyear.init.fields_get', 'model.account.fiscalyear.close_fiscalyear.init.default_get', 'model.sale.line-account.tax.search', 'model.sale.line-account.tax.export_data', 'model.sale.line-account.tax.search_read', 'model.sale.line-account.tax.import_data', 'model.sale.line-account.tax.create', 'model.sale.line-account.tax.write', 'model.sale.line-account.tax.read', 'model.sale.line-account.tax.search_count', 'model.sale.line-account.tax.copy', 'model.sale.line-account.tax.fields_get', 'model.sale.line-account.tax.default_get', 'model.sale.line-account.tax.delete', 'model.res.request.reference.search', 'model.res.request.reference.fields_view_get', 'model.res.request.reference.export_data', 'model.res.request.reference.search_read', 'model.res.request.reference.import_data', 'model.res.request.reference.create', 'model.res.request.reference.write', 'model.res.request.reference.read', 'model.res.request.reference.search_count', 'model.res.request.reference.links_get', 'model.res.request.reference.copy', 'model.res.request.reference.fields_get', 'model.res.request.reference.default_get', 'model.res.request.reference.delete', 'model.sale.line-account.invoice.line.search', 'model.sale.line-account.invoice.line.export_data', 'model.sale.line-account.invoice.line.search_read', 'model.sale.line-account.invoice.line.import_data', 'model.sale.line-account.invoice.line.create', 'model.sale.line-account.invoice.line.write', 'model.sale.line-account.invoice.line.read', 'model.sale.line-account.invoice.line.search_count', 'model.sale.line-account.invoice.line.copy', 'model.sale.line-account.invoice.line.fields_get', 'model.sale.line-account.invoice.line.default_get', 'model.sale.line-account.invoice.line.delete', 'model.company.employee.search', 'model.company.employee.fields_view_get', 'model.company.employee.export_data', 'model.company.employee.search_read', 'model.company.employee.fields_get', 'model.company.employee.create', 'model.company.employee.write', 'model.company.employee.read', 'model.company.employee.search_count', 'model.company.employee.import_data', 'model.company.employee.copy', 'model.company.employee.on_change_with_vat_code', 'model.company.employee.default_get', 'model.company.employee.delete', 'model.account.account.open_balance_sheet.init.fields_view_get', 'model.account.account.open_balance_sheet.init.fields_get', 'model.account.account.open_balance_sheet.init.default_get', 'model.stock.period.search', 'model.stock.period.fields_view_get', 'model.stock.period.button_draft', 'model.stock.period.export_data', 'model.stock.period.search_read', 'model.stock.period.import_data', 'model.stock.period.create', 'model.stock.period.write', 'model.stock.period.read', 'model.stock.period.search_count', 'model.stock.period.button_close', 'model.stock.period.copy', 'model.stock.period.fields_get', 'model.stock.period.default_get', 'model.stock.period.delete', 'model.company.company.config.init.fields_view_get', 'model.company.company.config.init.fields_get', 'model.company.company.config.init.default_get', 'model.account.journal.view.search', 'model.account.journal.view.fields_view_get', 'model.account.journal.view.export_data', 'model.account.journal.view.search_read', 'model.account.journal.view.import_data', 'model.account.journal.view.create', 'model.account.journal.view.write', 'model.account.journal.view.read', 'model.account.journal.view.search_count', 'model.account.journal.view.copy', 'model.account.journal.view.fields_get', 'model.account.journal.view.default_get', 'model.account.journal.view.delete', 'model.ir.model.access.search', 'model.ir.model.access.fields_view_get', 'model.ir.model.access.export_data', 'model.ir.model.access.search_read', 'model.ir.model.access.import_data', 'model.ir.model.access.create', 'model.ir.model.access.write', 'model.ir.model.access.read', 'model.ir.model.access.search_count', 'model.ir.model.access.copy', 'model.ir.model.access.fields_get', 'model.ir.model.access.default_get', 'model.ir.model.access.delete', 'model.stock.shipment.out.assign.assign_failed.fields_view_get', 'model.stock.shipment.out.assign.assign_failed.fields_get', 'model.stock.shipment.out.assign.assign_failed.default_get', 'model.account.move.print_general_journal.init.fields_view_get', 'model.account.move.print_general_journal.init.fields_get', 'model.account.move.print_general_journal.init.default_get', 'model.account.tax.rule.line.search', 'model.account.tax.rule.line.fields_view_get', 'model.account.tax.rule.line.export_data', 'model.account.tax.rule.line.search_read', 'model.account.tax.rule.line.import_data', 'model.account.tax.rule.line.create', 'model.account.tax.rule.line.write', 'model.account.tax.rule.line.read', 'model.account.tax.rule.line.search_count', 'model.account.tax.rule.line.copy', 'model.account.tax.rule.line.fields_get', 'model.account.tax.rule.line.default_get', 'model.account.tax.rule.line.delete', 'model.account.account.update_chart_account.start.fields_view_get', 'model.account.account.update_chart_account.start.fields_get', 'model.account.account.update_chart_account.start.default_get', 'model.ir.property.search', 'model.ir.property.fields_view_get', 'model.ir.property.export_data', 'model.ir.property.search_read', 'model.ir.property.import_data', 'model.ir.property.create', 'model.ir.property.write', 'model.ir.property.read', 'model.ir.property.search_count', 'model.ir.property.models_get', 'model.ir.property.copy', 'model.ir.property.fields_get', 'model.ir.property.default_get', 'model.ir.property.delete', 'model.ir.module.module.config_wizard.first.fields_view_get', 'model.ir.module.module.config_wizard.first.fields_get', 'model.ir.module.module.config_wizard.first.default_get', 'model.account.invoice.credit_invoice.init.fields_view_get', 'model.account.invoice.credit_invoice.init.fields_get', 'model.account.invoice.credit_invoice.init.default_get', 'model.ir.module.module.install_upgrade.start.fields_view_get', 'model.ir.module.module.install_upgrade.start.fields_get', 'model.ir.module.module.install_upgrade.start.default_get', 'model.ir.action.act_window.view.search', 'model.ir.action.act_window.view.fields_view_get', 'model.ir.action.act_window.view.export_data', 'model.ir.action.act_window.view.search_read', 'model.ir.action.act_window.view.import_data', 'model.ir.action.act_window.view.create', 'model.ir.action.act_window.view.write', 'model.ir.action.act_window.view.read', 'model.ir.action.act_window.view.search_count', 'model.ir.action.act_window.view.copy', 'model.ir.action.act_window.view.fields_get', 'model.ir.action.act_window.view.default_get', 'model.ir.action.act_window.view.delete', 'model.account.tax.code.write', 'model.account.tax.code.search', 'model.account.tax.code.fields_view_get', 'model.account.tax.code.export_data', 'model.account.tax.code.search_read', 'model.account.tax.code.import_data', 'model.account.tax.code.create', 'model.account.tax.code.on_change_with_currency_digits', 'model.account.tax.code.read', 'model.account.tax.code.search_count', 'model.account.tax.code.copy', 'model.account.tax.code.fields_get', 'model.account.tax.code.default_get', 'model.account.tax.code.delete', 'model.stock.shipment.internal.search', 'model.stock.shipment.internal.fields_view_get', 'model.stock.shipment.internal.button_draft', 'model.stock.shipment.internal.workflow_trigger_validate', 'model.stock.shipment.internal.export_data', 'model.stock.shipment.internal.search_read', 'model.stock.shipment.internal.import_data', 'model.stock.shipment.internal.create', 'model.stock.shipment.internal.write', 'model.stock.shipment.internal.read', 'model.stock.shipment.internal.search_count', 'model.stock.shipment.internal.copy', 'model.stock.shipment.internal.fields_get', 'model.stock.shipment.internal.default_get', 'model.stock.shipment.internal.delete', 'model.stock.inventory.search', 'model.stock.inventory.fields_view_get', 'model.stock.inventory.workflow_trigger_validate', 'model.stock.inventory.export_data', 'model.stock.inventory.search_read', 'model.stock.inventory.import_data', 'model.stock.inventory.create', 'model.stock.inventory.write', 'model.stock.inventory.read', 'model.stock.inventory.search_count', 'model.stock.inventory.copy', 'model.stock.inventory.fields_get', 'model.stock.inventory.default_get', 'model.stock.inventory.delete', 'model.ir.action.report.search', 'model.ir.action.report.fields_view_get', 'model.ir.action.report.export_data', 'model.ir.action.report.search_read', 'model.ir.action.report.import_data', 'model.ir.action.report.create', 'model.ir.action.report.write', 'model.ir.action.report.read', 'model.ir.action.report.search_count', 'model.ir.action.report.copy', 'model.ir.action.report.fields_get', 'model.ir.action.report.default_get', 'model.ir.action.report.delete', 'model.ir.export.search', 'model.ir.export.fields_view_get', 'model.ir.export.export_data', 'model.ir.export.search_read', 'model.ir.export.import_data', 'model.ir.export.create', 'model.ir.export.write', 'model.ir.export.read', 'model.ir.export.search_count', 'model.ir.export.copy', 'model.ir.export.fields_get', 'model.ir.export.default_get', 'model.ir.export.delete', 'model.company.company.search', 'model.company.company.fields_view_get', 'model.company.company.export_data', 'model.company.company.search_read', 'model.company.company.fields_get', 'model.company.company.create', 'model.company.company.write', 'model.company.company.read', 'model.company.company.search_count', 'model.company.company.import_data', 'model.company.company.copy', 'model.company.company.on_change_with_vat_code', 'model.company.company.default_get', 'model.company.company.delete', 'model.ir.module.module.config_wizard.item.search', 'model.ir.module.module.config_wizard.item.fields_view_get', 'model.ir.module.module.config_wizard.item.export_data', 'model.ir.module.module.config_wizard.item.search_read', 'model.ir.module.module.config_wizard.item.import_data', 'model.ir.module.module.config_wizard.item.create', 'model.ir.module.module.config_wizard.item.write', 'model.ir.module.module.config_wizard.item.read', 'model.ir.module.module.config_wizard.item.search_count', 'model.ir.module.module.config_wizard.item.copy', 'model.ir.module.module.config_wizard.item.fields_get', 'model.ir.module.module.config_wizard.item.default_get', 'model.ir.module.module.config_wizard.item.delete', 'model.currency.currency.search', 'model.currency.currency.fields_view_get', 'model.currency.currency.compute', 'model.currency.currency.export_data', 'model.currency.currency.search_read', 'model.currency.currency.import_data', 'model.currency.currency.create', 'model.currency.currency.write', 'model.currency.currency.on_change_with_rate', 'model.currency.currency.search_count', 'model.currency.currency.read', 'model.currency.currency.copy', 'model.currency.currency.fields_get', 'model.currency.currency.default_get', 'model.currency.currency.delete', 'model.ir.ui.view.search', 'model.ir.ui.view.fields_view_get', 'model.ir.ui.view.export_data', 'model.ir.ui.view.search_read', 'model.ir.ui.view.import_data', 'model.ir.ui.view.create', 'model.ir.ui.view.write', 'model.ir.ui.view.read', 'model.ir.ui.view.search_count', 'model.ir.ui.view.copy', 'model.ir.ui.view.fields_get', 'model.ir.ui.view.default_get', 'model.ir.ui.view.delete', 'model.account.tax.write', 'model.account.tax.search', 'model.account.tax.fields_view_get', 'model.account.tax.export_data', 'model.account.tax.search_read', 'model.account.tax.import_data', 'model.account.tax.create', 'model.account.tax.on_change_with_currency_digits', 'model.account.tax.read', 'model.account.tax.search_count', 'model.account.tax.copy', 'model.account.tax.fields_get', 'model.account.tax.default_get', 'model.account.tax.delete', 'model.stock.shipment.in.search', 'model.stock.shipment.in.fields_view_get', 'model.stock.shipment.in.button_draft', 'model.stock.shipment.in.workflow_trigger_validate', 'model.stock.shipment.in.export_data', 'model.stock.shipment.in.search_read', 'model.stock.shipment.in.import_data', 'model.stock.shipment.in.create', 'model.stock.shipment.in.on_change_supplier', 'model.stock.shipment.in.write', 'model.stock.shipment.in.read', 'model.stock.shipment.in.search_count', 'model.stock.shipment.in.copy', 'model.stock.shipment.in.fields_get', 'model.stock.shipment.in.default_get', 'model.stock.shipment.in.delete', 'model.ir.model.field-res.group.search', 'model.ir.model.field-res.group.export_data', 'model.ir.model.field-res.group.search_read', 'model.ir.model.field-res.group.import_data', 'model.ir.model.field-res.group.create', 'model.ir.model.field-res.group.write', 'model.ir.model.field-res.group.read', 'model.ir.model.field-res.group.search_count', 'model.ir.model.field-res.group.copy', 'model.ir.model.field-res.group.fields_get', 'model.ir.model.field-res.group.default_get', 'model.ir.model.field-res.group.delete', 'model.stock.configuration.search', 'model.stock.configuration.fields_view_get', 'model.stock.configuration.export_data', 'model.stock.configuration.search_read', 'model.stock.configuration.import_data', 'model.stock.configuration.create', 'model.stock.configuration.write', 'model.stock.configuration.read', 'model.stock.configuration.search_count', 'model.stock.configuration.copy', 'model.stock.configuration.fields_get', 'model.stock.configuration.default_get', 'model.stock.configuration.delete', 'model.workflow.search', 'model.workflow.fields_view_get', 'model.workflow.export_data', 'model.workflow.search_read', 'model.workflow.import_data', 'model.workflow.create', 'model.workflow.write', 'model.workflow.read', 'model.workflow.search_count', 'model.workflow.copy', 'model.workflow.fields_get', 'model.workflow.default_get', 'model.workflow.delete', 'model.account.journal.period.search', 'model.account.journal.period.fields_view_get', 'model.account.journal.period.export_data', 'model.account.journal.period.search_read', 'model.account.journal.period.import_data', 'model.account.journal.period.create', 'model.account.journal.period.write', 'model.account.journal.period.read', 'model.account.journal.period.search_count', 'model.account.journal.period.copy', 'model.account.journal.period.fields_get', 'model.account.journal.period.default_get', 'model.account.journal.period.delete', 'model.account.tax.rule.line.template.search', 'model.account.tax.rule.line.template.fields_view_get', 'model.account.tax.rule.line.template.export_data', 'model.account.tax.rule.line.template.search_read', 'model.account.tax.rule.line.template.import_data', 'model.account.tax.rule.line.template.create', 'model.account.tax.rule.line.template.write', 'model.account.tax.rule.line.template.read', 'model.account.tax.rule.line.template.search_count', 'model.account.tax.rule.line.template.copy', 'model.account.tax.rule.line.template.fields_get', 'model.account.tax.rule.line.template.default_get', 'model.account.tax.rule.line.template.delete', 'model.account.invoice.line-account.tax.search', 'model.account.invoice.line-account.tax.export_data', 'model.account.invoice.line-account.tax.search_read', 'model.account.invoice.line-account.tax.import_data', 'model.account.invoice.line-account.tax.create', 'model.account.invoice.line-account.tax.write', 'model.account.invoice.line-account.tax.read', 'model.account.invoice.line-account.tax.search_count', 'model.account.invoice.line-account.tax.copy', 'model.account.invoice.line-account.tax.fields_get', 'model.account.invoice.line-account.tax.default_get', 'model.account.invoice.line-account.tax.delete', 'model.account.account.open_chart_account.init.fields_view_get', 'model.account.account.open_chart_account.init.fields_get', 'model.account.account.open_chart_account.init.default_get', 'model.ir.ui.menu.search', 'model.ir.ui.menu.fields_view_get', 'model.ir.ui.menu.export_data', 'model.ir.ui.menu.search_read', 'model.ir.ui.menu.list_icons', 'model.ir.ui.menu.create', 'model.ir.ui.menu.write', 'model.ir.ui.menu.read', 'model.ir.ui.menu.search_count', 'model.ir.ui.menu.import_data', 'model.ir.ui.menu.copy', 'model.ir.ui.menu.fields_get', 'model.ir.ui.menu.default_get', 'model.ir.ui.menu.delete', 'model.account.move.open_journal.ask.fields_view_get', 'model.account.move.open_journal.ask.fields_get', 'model.account.move.open_journal.ask.default_get', 'model.ir.ui.icon.search', 'model.ir.ui.icon.fields_view_get', 'model.ir.ui.icon.export_data', 'model.ir.ui.icon.search_read', 'model.ir.ui.icon.import_data', 'model.ir.ui.icon.create', 'model.ir.ui.icon.write', 'model.ir.ui.icon.read', 'model.ir.ui.icon.search_count', 'model.ir.ui.icon.list_icons', 'model.ir.ui.icon.copy', 'model.ir.ui.icon.fields_get', 'model.ir.ui.icon.default_get', 'model.ir.ui.icon.delete', 'model.workflow.trigger.search', 'model.workflow.trigger.fields_view_get', 'model.workflow.trigger.export_data', 'model.workflow.trigger.search_read', 'model.workflow.trigger.import_data', 'model.workflow.trigger.read', 'model.workflow.trigger.search_count', 'model.workflow.trigger.fields_get', 'model.workflow.trigger.default_get', 'model.account.invoice.payment_term.line.write', 'model.account.invoice.payment_term.line.search', 'model.account.invoice.payment_term.line.fields_view_get', 'model.account.invoice.payment_term.line.export_data', 'model.account.invoice.payment_term.line.search_read', 'model.account.invoice.payment_term.line.import_data', 'model.account.invoice.payment_term.line.create', 'model.account.invoice.payment_term.line.delete', 'model.account.invoice.payment_term.line.get_delay', 'model.account.invoice.payment_term.line.on_change_with_currency_digits', 'model.account.invoice.payment_term.line.read', 'model.account.invoice.payment_term.line.search_count', 'model.account.invoice.payment_term.line.get_type', 'model.account.invoice.payment_term.line.copy', 'model.account.invoice.payment_term.line.fields_get', 'model.account.invoice.payment_term.line.default_get', 'model.account.invoice.payment_term.line.on_change_type', 'model.stock.shipment.internal.assign.assign_failed.fields_view_get', 'model.stock.shipment.internal.assign.assign_failed.fields_get', 'model.stock.shipment.internal.assign.assign_failed.default_get', 'model.party.check_vies.check.fields_view_get', 'model.party.check_vies.check.fields_get', 'model.party.check_vies.check.default_get', 'model.sale.line-ignored-stock.move.search', 'model.sale.line-ignored-stock.move.export_data', 'model.sale.line-ignored-stock.move.search_read', 'model.sale.line-ignored-stock.move.import_data', 'model.sale.line-ignored-stock.move.create', 'model.sale.line-ignored-stock.move.write', 'model.sale.line-ignored-stock.move.read', 'model.sale.line-ignored-stock.move.search_count', 'model.sale.line-ignored-stock.move.copy', 'model.sale.line-ignored-stock.move.fields_get', 'model.sale.line-ignored-stock.move.default_get', 'model.sale.line-ignored-stock.move.delete', 'model.ir.date.fields_get', 'model.ir.date.default_get', 'model.ir.date.today', 'model.account.tax.rule.template.search', 'model.account.tax.rule.template.fields_view_get', 'model.account.tax.rule.template.export_data', 'model.account.tax.rule.template.search_read', 'model.account.tax.rule.template.import_data', 'model.account.tax.rule.template.create', 'model.account.tax.rule.template.write', 'model.account.tax.rule.template.read', 'model.account.tax.rule.template.search_count', 'model.account.tax.rule.template.copy', 'model.account.tax.rule.template.fields_get', 'model.account.tax.rule.template.default_get', 'model.account.tax.rule.template.delete', 'model.res.request.search', 'model.res.request.fields_view_get', 'model.res.request.export_data', 'model.res.request.on_change_with_number_references', 'model.res.request.import_data', 'model.res.request.create', 'model.res.request.request_close', 'model.res.request.write', 'model.res.request.search_read', 'model.res.request.search_count', 'model.res.request.read', 'model.res.request.request_reply', 'model.res.request.request_get', 'model.res.request.request_send', 'model.res.request.copy', 'model.res.request.fields_get', 'model.res.request.default_get', 'model.res.request.delete', 'model.ir.lang.search', 'model.ir.lang.fields_view_get', 'model.ir.lang.export_data', 'model.ir.lang.search_read', 'model.ir.lang.import_data', 'model.ir.lang.create', 'model.ir.lang.write', 'model.ir.lang.read', 'model.ir.lang.search_count', 'model.ir.lang.copy', 'model.ir.lang.fields_get', 'model.ir.lang.default_get', 'model.ir.lang.delete', 'model.ir.ui.view_sc.search', 'model.ir.ui.view_sc.fields_view_get', 'model.ir.ui.view_sc.export_data', 'model.ir.ui.view_sc.search_read', 'model.ir.ui.view_sc.import_data', 'model.ir.ui.view_sc.create', 'model.ir.ui.view_sc.get_sc', 'model.ir.ui.view_sc.write', 'model.ir.ui.view_sc.read', 'model.ir.ui.view_sc.search_count', 'model.ir.ui.view_sc.copy', 'model.ir.ui.view_sc.fields_get', 'model.ir.ui.view_sc.default_get', 'model.ir.ui.view_sc.delete', 'model.account.tax.line.on_change_tax', 'model.account.tax.line.search', 'model.account.tax.line.fields_view_get', 'model.account.tax.line.export_data', 'model.account.tax.line.search_read', 'model.account.tax.line.import_data', 'model.account.tax.line.create', 'model.account.tax.line.on_change_with_currency_digits', 'model.account.tax.line.read', 'model.account.tax.line.search_count', 'model.account.tax.line.write', 'model.account.tax.line.copy', 'model.account.tax.line.fields_get', 'model.account.tax.line.default_get', 'model.account.tax.line.delete', 'model.stock.move.delete', 'model.stock.move.search', 'model.stock.move.fields_view_get', 'model.stock.move.search_count', 'model.stock.move.export_data', 'model.stock.move.search_read', 'model.stock.move.import_data', 'model.stock.move.create', 'model.stock.move.write', 'model.stock.move.on_change_with_unit_digits', 'model.stock.move.on_change_with_unit_price_required', 'model.stock.move.read', 'model.stock.move.on_change_product', 'model.stock.move.copy', 'model.stock.move.fields_get', 'model.stock.move.default_get', 'model.stock.move.on_change_uom', 'model.account.period.search', 'model.account.period.fields_view_get', 'model.account.period.export_data', 'model.account.period.search_read', 'model.account.period.import_data', 'model.account.period.create', 'model.account.period.write', 'model.account.period.read', 'model.account.period.search_count', 'model.account.period.copy', 'model.account.period.fields_get', 'model.account.period.default_get', 'model.account.period.delete', 'model.account.move.line.on_change_party', 'model.account.move.line.search', 'model.account.move.line.fields_view_get', 'model.account.move.line.on_change_credit', 'model.account.move.line.export_data', 'model.account.move.line.search_read', 'model.account.move.line.import_data', 'model.account.move.line.create', 'model.account.move.line.copy', 'model.account.move.line.on_change_debit', 'model.account.move.line.write', 'model.account.move.line.read', 'model.account.move.line.search_count', 'model.account.move.line.on_write', 'model.account.move.line.on_change_account', 'model.account.move.line.fields_get', 'model.account.move.line.default_get', 'model.account.move.line.delete', 'model.ir.ui.menu-res.group.search', 'model.ir.ui.menu-res.group.export_data', 'model.ir.ui.menu-res.group.search_read', 'model.ir.ui.menu-res.group.import_data', 'model.ir.ui.menu-res.group.create', 'model.ir.ui.menu-res.group.write', 'model.ir.ui.menu-res.group.read', 'model.ir.ui.menu-res.group.search_count', 'model.ir.ui.menu-res.group.copy', 'model.ir.ui.menu-res.group.fields_get', 'model.ir.ui.menu-res.group.default_get', 'model.ir.ui.menu-res.group.delete', 'model.sale.sale-recreated-account.invoice.search', 'model.sale.sale-recreated-account.invoice.export_data', 'model.sale.sale-recreated-account.invoice.search_read', 'model.sale.sale-recreated-account.invoice.import_data', 'model.sale.sale-recreated-account.invoice.create', 'model.sale.sale-recreated-account.invoice.write', 'model.sale.sale-recreated-account.invoice.read', 'model.sale.sale-recreated-account.invoice.search_count', 'model.sale.sale-recreated-account.invoice.copy', 'model.sale.sale-recreated-account.invoice.fields_get', 'model.sale.sale-recreated-account.invoice.default_get', 'model.sale.sale-recreated-account.invoice.delete', 'model.ir.module.module.dependency.search', 'model.ir.module.module.dependency.fields_view_get', 'model.ir.module.module.dependency.export_data', 'model.ir.module.module.dependency.search_read', 'model.ir.module.module.dependency.import_data', 'model.ir.module.module.dependency.create', 'model.ir.module.module.dependency.write', 'model.ir.module.module.dependency.read', 'model.ir.module.module.dependency.search_count', 'model.ir.module.module.dependency.copy', 'model.ir.module.module.dependency.fields_get', 'model.ir.module.module.dependency.default_get', 'model.ir.module.module.dependency.delete', 'model.account.account.type.template.search', 'model.account.account.type.template.fields_view_get', 'model.account.account.type.template.export_data', 'model.account.account.type.template.search_read', 'model.account.account.type.template.import_data', 'model.account.account.type.template.create', 'model.account.account.type.template.write', 'model.account.account.type.template.read', 'model.account.account.type.template.search_count', 'model.account.account.type.template.copy', 'model.account.account.type.template.fields_get', 'model.account.account.type.template.default_get', 'model.account.account.type.template.delete', 'model.ir.action-res.group.search', 'model.ir.action-res.group.export_data', 'model.ir.action-res.group.search_read', 'model.ir.action-res.group.import_data', 'model.ir.action-res.group.create', 'model.ir.action-res.group.write', 'model.ir.action-res.group.read', 'model.ir.action-res.group.search_count', 'model.ir.action-res.group.copy', 'model.ir.action-res.group.fields_get', 'model.ir.action-res.group.default_get', 'model.ir.action-res.group.delete', 'model.product.template-customer-account.tax.search', 'model.product.template-customer-account.tax.export_data', 'model.product.template-customer-account.tax.search_read', 'model.product.template-customer-account.tax.import_data', 'model.product.template-customer-account.tax.create', 'model.product.template-customer-account.tax.write', 'model.product.template-customer-account.tax.read', 'model.product.template-customer-account.tax.search_count', 'model.product.template-customer-account.tax.copy', 'model.product.template-customer-account.tax.fields_get', 'model.product.template-customer-account.tax.default_get', 'model.product.template-customer-account.tax.delete', 'model.account.account.template.search', 'model.account.account.template.fields_view_get', 'model.account.account.template.export_data', 'model.account.account.template.search_read', 'model.account.account.template.import_data', 'model.account.account.template.create', 'model.account.account.template.write', 'model.account.account.template.read', 'model.account.account.template.search_count', 'model.account.account.template.copy', 'model.account.account.template.fields_get', 'model.account.account.template.default_get', 'model.account.account.template.delete', 'model.party.address.on_change_country', 'model.party.address.search', 'model.party.address.fields_view_get', 'model.party.address.export_data', 'model.party.address.search_read', 'model.party.address.import_data', 'model.party.address.create', 'model.party.address.write', 'model.party.address.read', 'model.party.address.search_count', 'model.party.address.copy', 'model.party.address.fields_get', 'model.party.address.default_get', 'model.party.address.delete', 'model.ir.translation.clean.init.fields_view_get', 'model.ir.translation.clean.init.fields_get', 'model.ir.translation.clean.init.default_get', 'model.stock.location_stock_date.init.fields_view_get', 'model.stock.location_stock_date.init.fields_get', 'model.stock.location_stock_date.init.default_get', 'model.ir.rule.group-res.group.search', 'model.ir.rule.group-res.group.export_data', 'model.ir.rule.group-res.group.search_read', 'model.ir.rule.group-res.group.import_data', 'model.ir.rule.group-res.group.create', 'model.ir.rule.group-res.group.write', 'model.ir.rule.group-res.group.read', 'model.ir.rule.group-res.group.search_count', 'model.ir.rule.group-res.group.copy', 'model.ir.rule.group-res.group.fields_get', 'model.ir.rule.group-res.group.default_get', 'model.ir.rule.group-res.group.delete', 'model.account.invoice.line.write', 'model.account.invoice.line.search', 'model.account.invoice.line.fields_view_get', 'model.account.invoice.line.export_data', 'model.account.invoice.line.search_read', 'model.account.invoice.line.import_data', 'model.account.invoice.line.create', 'model.account.invoice.line.default_get', 'model.account.invoice.line.on_change_with_currency_digits', 'model.account.invoice.line.on_change_with_unit_digits', 'model.account.invoice.line.search_count', 'model.account.invoice.line.read', 'model.account.invoice.line.on_change_product', 'model.account.invoice.line.copy', 'model.account.invoice.line.fields_get', 'model.account.invoice.line.on_change_with_amount', 'model.account.invoice.line.on_change_with_party_lang', 'model.account.invoice.line.delete', 'model.country.subdivision.search', 'model.country.subdivision.fields_view_get', 'model.country.subdivision.export_data', 'model.country.subdivision.search_read', 'model.country.subdivision.import_data', 'model.country.subdivision.create', 'model.country.subdivision.write', 'model.country.subdivision.read', 'model.country.subdivision.search_count', 'model.country.subdivision.copy', 'model.country.subdivision.fields_get', 'model.country.subdivision.default_get', 'model.country.subdivision.delete', 'model.res.user-res.group.search', 'model.res.user-res.group.export_data', 'model.res.user-res.group.search_read', 'model.res.user-res.group.import_data', 'model.res.user-res.group.create', 'model.res.user-res.group.write', 'model.res.user-res.group.read', 'model.res.user-res.group.search_count', 'model.res.user-res.group.copy', 'model.res.user-res.group.fields_get', 'model.res.user-res.group.default_get', 'model.res.user-res.group.delete', 'model.account.invoice.print_invoice_report.warning.fields_view_get', 'model.account.invoice.print_invoice_report.warning.fields_get', 'model.account.invoice.print_invoice_report.warning.default_get', 'model.account.tax.template.search', 'model.account.tax.template.fields_view_get', 'model.account.tax.template.export_data', 'model.account.tax.template.search_read', 'model.account.tax.template.import_data', 'model.account.tax.template.create', 'model.account.tax.template.write', 'model.account.tax.template.read', 'model.account.tax.template.search_count', 'model.account.tax.template.copy', 'model.account.tax.template.fields_get', 'model.account.tax.template.default_get', 'model.account.tax.template.delete', 'model.stock.period.cache.search', 'model.stock.period.cache.fields_view_get', 'model.stock.period.cache.export_data', 'model.stock.period.cache.search_read', 'model.stock.period.cache.import_data', 'model.stock.period.cache.create', 'model.stock.period.cache.write', 'model.stock.period.cache.read', 'model.stock.period.cache.search_count', 'model.stock.period.cache.copy', 'model.stock.period.cache.fields_get', 'model.stock.period.cache.default_get', 'model.stock.period.cache.delete', 'model.account.tax.rule.search', 'model.account.tax.rule.fields_view_get', 'model.account.tax.rule.export_data', 'model.account.tax.rule.search_read', 'model.account.tax.rule.import_data', 'model.account.tax.rule.create', 'model.account.tax.rule.write', 'model.account.tax.rule.read', 'model.account.tax.rule.search_count', 'model.account.tax.rule.copy', 'model.account.tax.rule.fields_get', 'model.account.tax.rule.default_get', 'model.account.tax.rule.delete', 'model.product.product.search', 'model.product.product.fields_view_get', 'model.product.product.export_data', 'model.product.product.search_read', 'model.product.product.import_data', 'model.product.product.on_change_with_sale_uom', 'model.product.product.copy', 'model.product.product.write', 'model.product.product.read', 'model.product.product.search_count', 'model.product.product.create', 'model.product.product.fields_get', 'model.product.product.default_get', 'model.product.product.delete', 'model.account.invoice.payment_term.search', 'model.account.invoice.payment_term.fields_view_get', 'model.account.invoice.payment_term.export_data', 'model.account.invoice.payment_term.search_read', 'model.account.invoice.payment_term.import_data', 'model.account.invoice.payment_term.create', 'model.account.invoice.payment_term.write', 'model.account.invoice.payment_term.read', 'model.account.invoice.payment_term.search_count', 'model.account.invoice.payment_term.copy', 'model.account.invoice.payment_term.fields_get', 'model.account.invoice.payment_term.default_get', 'model.account.invoice.payment_term.delete', 'model.sale.sale.on_change_party', 'model.sale.sale.write', 'model.sale.sale.search', 'model.sale.sale.fields_view_get', 'model.sale.sale.workflow_trigger_validate', 'model.sale.sale.export_data', 'model.sale.sale.search_read', 'model.sale.sale.import_data', 'model.sale.sale.create', 'model.sale.sale.on_change_lines', 'model.sale.sale.on_change_with_currency_digits', 'model.sale.sale.read', 'model.sale.sale.search_count', 'model.sale.sale.copy', 'model.sale.sale.fields_get', 'model.sale.sale.default_get', 'model.sale.sale.on_change_with_party_lang', 'model.sale.sale.delete', 'model.account.fiscalyear-account.move.line.search', 'model.account.fiscalyear-account.move.line.export_data', 'model.account.fiscalyear-account.move.line.search_read', 'model.account.fiscalyear-account.move.line.import_data', 'model.account.fiscalyear-account.move.line.create', 'model.account.fiscalyear-account.move.line.write', 'model.account.fiscalyear-account.move.line.read', 'model.account.fiscalyear-account.move.line.search_count', 'model.account.fiscalyear-account.move.line.copy', 'model.account.fiscalyear-account.move.line.fields_get', 'model.account.fiscalyear-account.move.line.default_get', 'model.account.fiscalyear-account.move.line.delete', 'model.product.uom.category.search', 'model.product.uom.category.fields_view_get', 'model.product.uom.category.export_data', 'model.product.uom.category.search_read', 'model.product.uom.category.import_data', 'model.product.uom.category.create', 'model.product.uom.category.write', 'model.product.uom.category.read', 'model.product.uom.category.search_count', 'model.product.uom.category.copy', 'model.product.uom.category.fields_get', 'model.product.uom.category.default_get', 'model.product.uom.category.delete', 'model.ir.rule.group-res.user.search', 'model.ir.rule.group-res.user.export_data', 'model.ir.rule.group-res.user.search_read', 'model.ir.rule.group-res.user.import_data', 'model.ir.rule.group-res.user.create', 'model.ir.rule.group-res.user.write', 'model.ir.rule.group-res.user.read', 'model.ir.rule.group-res.user.search_count', 'model.ir.rule.group-res.user.copy', 'model.ir.rule.group-res.user.fields_get', 'model.ir.rule.group-res.user.default_get', 'model.ir.rule.group-res.user.delete', 'model.ir.translation.export.start.fields_view_get', 'model.ir.translation.export.start.fields_get', 'model.ir.translation.export.start.default_get', 'model.ir.sequence.type.search', 'model.ir.sequence.type.fields_view_get', 'model.ir.sequence.type.export_data', 'model.ir.sequence.type.search_read', 'model.ir.sequence.type.import_data', 'model.ir.sequence.type.create', 'model.ir.sequence.type.write', 'model.ir.sequence.type.read', 'model.ir.sequence.type.search_count', 'model.ir.sequence.type.copy', 'model.ir.sequence.type.fields_get', 'model.ir.sequence.type.default_get', 'model.ir.sequence.type.delete', 'model.workflow.instance.search', 'model.workflow.instance.fields_view_get', 'model.workflow.instance.export_data', 'model.workflow.instance.search_read', 'model.workflow.instance.import_data', 'model.workflow.instance.read', 'model.workflow.instance.search_count', 'model.workflow.instance.fields_get', 'model.workflow.instance.default_get', 'model.party.party.search', 'model.party.party.fields_view_get', 'model.party.party.export_data', 'model.party.party.search_read', 'model.party.party.fields_get', 'model.party.party.create', 'model.party.party.write', 'model.party.party.read', 'model.party.party.search_count', 'model.party.party.import_data', 'model.party.party.copy', 'model.party.party.on_change_with_vat_code', 'model.party.party.default_get', 'model.party.party.delete', 'model.ir.translation.clean.start.fields_view_get', 'model.ir.translation.clean.start.fields_get', 'model.ir.translation.clean.start.default_get', 'model.workflow.activity.search', 'model.workflow.activity.fields_view_get', 'model.workflow.activity.export_data', 'model.workflow.activity.search_read', 'model.workflow.activity.import_data', 'model.workflow.activity.create', 'model.workflow.activity.write', 'model.workflow.activity.read', 'model.workflow.activity.search_count', 'model.workflow.activity.copy', 'model.workflow.activity.fields_get', 'model.workflow.activity.default_get', 'model.workflow.activity.delete', 'model.product.template.search', 'model.product.template.fields_view_get', 'model.product.template.export_data', 'model.product.template.search_read', 'model.product.template.import_data', 'model.product.template.on_change_with_sale_uom', 'model.product.template.copy', 'model.product.template.write', 'model.product.template.read', 'model.product.template.search_count', 'model.product.template.create', 'model.product.template.fields_get', 'model.product.template.default_get', 'model.product.template.delete', 'model.ir.module.module.install_upgrade.init.fields_view_get', 'model.ir.module.module.install_upgrade.init.fields_get', 'model.ir.module.module.install_upgrade.init.default_get', 'model.ir.cron.search', 'model.ir.cron.fields_view_get', 'model.ir.cron.export_data', 'model.ir.cron.search_read', 'model.ir.cron.import_data', 'model.ir.cron.create', 'model.ir.cron.write', 'model.ir.cron.read', 'model.ir.cron.search_count', 'model.ir.cron.copy', 'model.ir.cron.fields_get', 'model.ir.cron.default_get', 'model.ir.cron.delete', 'model.stock.shipment.in.return.assign.assign_failed.fields_view_get', 'model.stock.shipment.in.return.assign.assign_failed.fields_get', 'model.stock.shipment.in.return.assign.assign_failed.default_get', 'model.workflow.transition.search', 'model.workflow.transition.fields_view_get', 'model.workflow.transition.export_data', 'model.workflow.transition.search_read', 'model.workflow.transition.import_data', 'model.workflow.transition.create', 'model.workflow.transition.write', 'model.workflow.transition.read', 'model.workflow.transition.search_count', 'model.workflow.transition.copy', 'model.workflow.transition.fields_get', 'model.workflow.transition.default_get', 'model.workflow.transition.delete', 'model.ir.model.field.access.search', 'model.ir.model.field.access.fields_view_get', 'model.ir.model.field.access.export_data', 'model.ir.model.field.access.search_read', 'model.ir.model.field.access.import_data', 'model.ir.model.field.access.create', 'model.ir.model.field.access.write', 'model.ir.model.field.access.read', 'model.ir.model.field.access.search_count', 'model.ir.model.field.access.copy', 'model.ir.model.field.access.fields_get', 'model.ir.model.field.access.default_get', 'model.ir.model.field.access.delete', 'model.account.invoice.tax.search', 'model.account.invoice.tax.fields_view_get', 'model.account.invoice.tax.export_data', 'model.account.invoice.tax.search_read', 'model.account.invoice.tax.import_data', 'model.account.invoice.tax.create', 'model.account.invoice.tax.write', 'model.account.invoice.tax.read', 'model.account.invoice.tax.search_count', 'model.account.invoice.tax.copy', 'model.account.invoice.tax.fields_get', 'model.account.invoice.tax.default_get', 'model.account.invoice.tax.delete', 'model.account.invoice.pay_invoice.init.on_change_with_currency_digits', 'model.account.invoice.pay_invoice.init.fields_view_get', 'model.account.invoice.pay_invoice.init.fields_get', 'model.account.invoice.pay_invoice.init.default_get', 'model.account.invoice.payment_term.line.delay.search', 'model.account.invoice.payment_term.line.delay.fields_view_get', 'model.account.invoice.payment_term.line.delay.export_data', 'model.account.invoice.payment_term.line.delay.search_read', 'model.account.invoice.payment_term.line.delay.import_data', 'model.account.invoice.payment_term.line.delay.create', 'model.account.invoice.payment_term.line.delay.write', 'model.account.invoice.payment_term.line.delay.read', 'model.account.invoice.payment_term.line.delay.search_count', 'model.account.invoice.payment_term.line.delay.copy', 'model.account.invoice.payment_term.line.delay.fields_get', 'model.account.invoice.payment_term.line.delay.default_get', 'model.account.invoice.payment_term.line.delay.delete', 'model.product.category.search', 'model.product.category.fields_view_get', 'model.product.category.export_data', 'model.product.category.search_read', 'model.product.category.import_data', 'model.product.category.create', 'model.product.category.write', 'model.product.category.read', 'model.product.category.search_count', 'model.product.category.copy', 'model.product.category.fields_get', 'model.product.category.default_get', 'model.product.category.delete', 'model.res.request.history.search', 'model.res.request.history.fields_view_get', 'model.res.request.history.export_data', 'model.res.request.history.search_read', 'model.res.request.history.import_data', 'model.res.request.history.create', 'model.res.request.history.write', 'model.res.request.history.read', 'model.res.request.history.search_count', 'model.res.request.history.copy', 'model.res.request.history.fields_get', 'model.res.request.history.default_get', 'model.res.request.history.delete', 'model.stock.shipment.out.search', 'model.stock.shipment.out.fields_view_get', 'model.stock.shipment.out.button_draft', 'model.stock.shipment.out.workflow_trigger_validate', 'model.stock.shipment.out.export_data', 'model.stock.shipment.out.search_read', 'model.stock.shipment.out.import_data', 'model.stock.shipment.out.create', 'model.stock.shipment.out.write', 'model.stock.shipment.out.read', 'model.stock.shipment.out.search_count', 'model.stock.shipment.out.on_change_customer', 'model.stock.shipment.out.copy', 'model.stock.shipment.out.fields_get', 'model.stock.shipment.out.default_get', 'model.stock.shipment.out.delete', 'model.stock.shipment.out.return.search', 'model.stock.shipment.out.return.fields_view_get', 'model.stock.shipment.out.return.button_draft', 'model.stock.shipment.out.return.workflow_trigger_validate', 'model.stock.shipment.out.return.export_data', 'model.stock.shipment.out.return.search_read', 'model.stock.shipment.out.return.import_data', 'model.stock.shipment.out.return.create', 'model.stock.shipment.out.return.write', 'model.stock.shipment.out.return.read', 'model.stock.shipment.out.return.search_count', 'model.stock.shipment.out.return.on_change_customer', 'model.stock.shipment.out.return.copy', 'model.stock.shipment.out.return.fields_get', 'model.stock.shipment.out.return.default_get', 'model.stock.shipment.out.return.delete', 'model.account.invoice.fields_view_get', 'model.account.invoice.button_draft', 'model.account.invoice.search_read', 'model.account.invoice.on_change_with_currency_digits', 'model.account.invoice.copy', 'model.account.invoice.search_count', 'model.account.invoice.on_change_lines', 'model.account.invoice.on_change_with_party_lang', 'model.account.invoice.on_change_taxes', 'model.account.invoice.on_change_party', 'model.account.invoice.search', 'model.account.invoice.workflow_trigger_validate', 'model.account.invoice.import_data', 'model.account.invoice.export_data', 'model.account.invoice.default_get', 'model.account.invoice.write', 'model.account.invoice.read', 'model.account.invoice.on_change_with_currency_date', 'model.account.invoice.on_change_type', 'model.account.invoice.fields_get', 'model.account.invoice.create', 'model.account.invoice.delete', 'model.product.category-customer-account.tax.search', 'model.product.category-customer-account.tax.export_data', 'model.product.category-customer-account.tax.search_read', 'model.product.category-customer-account.tax.import_data', 'model.product.category-customer-account.tax.create', 'model.product.category-customer-account.tax.write', 'model.product.category-customer-account.tax.read', 'model.product.category-customer-account.tax.search_count', 'model.product.category-customer-account.tax.copy', 'model.product.category-customer-account.tax.fields_get', 'model.product.category-customer-account.tax.default_get', 'model.product.category-customer-account.tax.delete', 'model.ir.model.print_model_graph.init.fields_view_get', 'model.ir.model.print_model_graph.init.fields_get', 'model.ir.model.print_model_graph.init.default_get', 'model.account.account-account.tax.search', 'model.account.account-account.tax.export_data', 'model.account.account-account.tax.search_read', 'model.account.account-account.tax.import_data', 'model.account.account-account.tax.create', 'model.account.account-account.tax.write', 'model.account.account-account.tax.read', 'model.account.account-account.tax.search_count', 'model.account.account-account.tax.copy', 'model.account.account-account.tax.fields_get', 'model.account.account-account.tax.default_get', 'model.account.account-account.tax.delete', 'model.account.invoice-account.move.line.search', 'model.account.invoice-account.move.line.export_data', 'model.account.invoice-account.move.line.search_read', 'model.account.invoice-account.move.line.import_data', 'model.account.invoice-account.move.line.create', 'model.account.invoice-account.move.line.write', 'model.account.invoice-account.move.line.read', 'model.account.invoice-account.move.line.search_count', 'model.account.invoice-account.move.line.copy', 'model.account.invoice-account.move.line.fields_get', 'model.account.invoice-account.move.line.default_get', 'model.account.invoice-account.move.line.delete', 'model.ir.module.module.button_install_cancel', 'model.ir.module.module.search', 'model.ir.module.module.fields_view_get', 'model.ir.module.module.export_data', 'model.ir.module.module.search_read', 'model.ir.module.module.import_data', 'model.ir.module.module.create', 'model.ir.module.module.button_upgrade', 'model.ir.module.module.button_install', 'model.ir.module.module.button_upgrade_cancel', 'model.ir.module.module.write', 'model.ir.module.module.read', 'model.ir.module.module.search_count', 'model.ir.module.module.button_uninstall_cancel', 'model.ir.module.module.button_uninstall', 'model.ir.module.module.on_write', 'model.ir.module.module.copy', 'model.ir.module.module.fields_get', 'model.ir.module.module.default_get', 'model.ir.module.module.delete', 'model.account.account.open_aged_balance.init.fields_view_get', 'model.account.account.open_aged_balance.init.fields_get', 'model.account.account.open_aged_balance.init.default_get', 'model.account.fiscalyear.search', 'model.account.fiscalyear.fields_view_get', 'model.account.fiscalyear.export_data', 'model.account.fiscalyear.search_read', 'model.account.fiscalyear.import_data', 'model.account.fiscalyear.create', 'model.account.fiscalyear.reopen', 'model.account.fiscalyear.write', 'model.account.fiscalyear.read', 'model.account.fiscalyear.search_count', 'model.account.fiscalyear.create_period', 'model.account.fiscalyear.close', 'model.account.fiscalyear.create_period_3', 'model.account.fiscalyear.copy', 'model.account.fiscalyear.fields_get', 'model.account.fiscalyear.default_get', 'model.account.fiscalyear.delete', 'model.account.account.update_chart_account.init.fields_view_get', 'model.account.account.update_chart_account.init.fields_get', 'model.account.account.update_chart_account.init.default_get', 'model.res.user.config.init.fields_view_get', 'model.res.user.config.init.fields_get', 'model.res.user.config.init.default_get', 'model.workflow.workitem.search', 'model.workflow.workitem.fields_view_get', 'model.workflow.workitem.export_data', 'model.workflow.workitem.search_read', 'model.workflow.workitem.import_data', 'model.workflow.workitem.read', 'model.workflow.workitem.search_count', 'model.workflow.workitem.fields_get', 'model.workflow.workitem.default_get', 'model.account.move.unreconcile_lines.init.fields_view_get', 'model.account.move.unreconcile_lines.init.fields_get', 'model.account.move.unreconcile_lines.init.default_get', 'model.sale.handle.shipment.exception.ask.fields_view_get', 'model.sale.handle.shipment.exception.ask.fields_get', 'model.sale.handle.shipment.exception.ask.default_get', 'model.ir.sequence.strict.search', 'model.ir.sequence.strict.fields_view_get', 'model.ir.sequence.strict.export_data', 'model.ir.sequence.strict.search_read', 'model.ir.sequence.strict.import_data', 'model.ir.sequence.strict.create', 'model.ir.sequence.strict.write', 'model.ir.sequence.strict.read', 'model.ir.sequence.strict.search_count', 'model.ir.sequence.strict.code_get', 'model.ir.sequence.strict.copy', 'model.ir.sequence.strict.fields_get', 'model.ir.sequence.strict.default_get', 'model.ir.sequence.strict.delete', 'model.ir.export.line.search', 'model.ir.export.line.fields_view_get', 'model.ir.export.line.export_data', 'model.ir.export.line.search_read', 'model.ir.export.line.import_data', 'model.ir.export.line.create', 'model.ir.export.line.write', 'model.ir.export.line.read', 'model.ir.export.line.search_count', 'model.ir.export.line.copy', 'model.ir.export.line.fields_get', 'model.ir.export.line.default_get', 'model.ir.export.line.delete', 'model.sale.handle.invoice.exception.ask.fields_view_get', 'model.sale.handle.invoice.exception.ask.fields_get', 'model.sale.handle.invoice.exception.ask.default_get', 'model.ir.attachment.on_change_with_summary', 'model.ir.attachment.fields_view_get', 'model.ir.attachment.export_data', 'model.ir.attachment.search_read', 'model.ir.attachment.import_data', 'model.ir.attachment.create', 'model.ir.attachment.search', 'model.ir.attachment.write', 'model.ir.attachment.read', 'model.ir.attachment.search_count', 'model.ir.attachment.models_get', 'model.ir.attachment.copy', 'model.ir.attachment.fields_get', 'model.ir.attachment.default_get', 'model.ir.attachment.delete', 'model.country.country.search', 'model.country.country.fields_view_get', 'model.country.country.export_data', 'model.country.country.search_read', 'model.country.country.import_data', 'model.country.country.create', 'model.country.country.write', 'model.country.country.read', 'model.country.country.search_count', 'model.country.country.copy', 'model.country.country.fields_get', 'model.country.country.default_get', 'model.country.country.delete', 'model.ir.ui.view_tree_width.search', 'model.ir.ui.view_tree_width.fields_view_get', 'model.ir.ui.view_tree_width.set_width', 'model.ir.ui.view_tree_width.export_data', 'model.ir.ui.view_tree_width.search_read', 'model.ir.ui.view_tree_width.import_data', 'model.ir.ui.view_tree_width.create', 'model.ir.ui.view_tree_width.write', 'model.ir.ui.view_tree_width.read', 'model.ir.ui.view_tree_width.search_count', 'model.ir.ui.view_tree_width.copy', 'model.ir.ui.view_tree_width.fields_get', 'model.ir.ui.view_tree_width.default_get', 'model.ir.ui.view_tree_width.delete', 'model.res.group.search', 'model.res.group.fields_view_get', 'model.res.group.export_data', 'model.res.group.search_read', 'model.res.group.import_data', 'model.res.group.create', 'model.res.group.write', 'model.res.group.read', 'model.res.group.search_count', 'model.res.group.copy', 'model.res.group.fields_get', 'model.res.group.default_get', 'model.res.group.delete', 'model.account.journal.view.column.search', 'model.account.journal.view.column.fields_view_get', 'model.account.journal.view.column.export_data', 'model.account.journal.view.column.search_read', 'model.account.journal.view.column.import_data', 'model.account.journal.view.column.create', 'model.account.journal.view.column.write', 'model.account.journal.view.column.read', 'model.account.journal.view.column.search_count', 'model.account.journal.view.column.copy', 'model.account.journal.view.column.fields_get', 'model.account.journal.view.column.default_get', 'model.account.journal.view.column.delete', 'model.res.user.warning.search', 'model.res.user.warning.fields_view_get', 'model.res.user.warning.export_data', 'model.res.user.warning.search_read', 'model.res.user.warning.import_data', 'model.res.user.warning.create', 'model.res.user.warning.write', 'model.res.user.warning.read', 'model.res.user.warning.search_count', 'model.res.user.warning.copy', 'model.res.user.warning.fields_get', 'model.res.user.warning.default_get', 'model.res.user.warning.delete', 'model.ir.sequence.type-res.group.search', 'model.ir.sequence.type-res.group.export_data', 'model.ir.sequence.type-res.group.search_read', 'model.ir.sequence.type-res.group.import_data', 'model.ir.sequence.type-res.group.create', 'model.ir.sequence.type-res.group.write', 'model.ir.sequence.type-res.group.read', 'model.ir.sequence.type-res.group.search_count', 'model.ir.sequence.type-res.group.copy', 'model.ir.sequence.type-res.group.fields_get', 'model.ir.sequence.type-res.group.default_get', 'model.ir.sequence.type-res.group.delete', 'model.currency.currency.rate.search', 'model.currency.currency.rate.fields_view_get', 'model.currency.currency.rate.export_data', 'model.currency.currency.rate.search_read', 'model.currency.currency.rate.import_data', 'model.currency.currency.rate.create', 'model.currency.currency.rate.write', 'model.currency.currency.rate.read', 'model.currency.currency.rate.search_count', 'model.currency.currency.rate.copy', 'model.currency.currency.rate.fields_get', 'model.currency.currency.rate.default_get', 'model.currency.currency.rate.delete', 'model.ir.cron-company.company.search', 'model.ir.cron-company.company.export_data', 'model.ir.cron-company.company.search_read', 'model.ir.cron-company.company.import_data', 'model.ir.cron-company.company.create', 'model.ir.cron-company.company.write', 'model.ir.cron-company.company.read', 'model.ir.cron-company.company.search_count', 'model.ir.cron-company.company.copy', 'model.ir.cron-company.company.fields_get', 'model.ir.cron-company.company.default_get', 'model.ir.cron-company.company.delete', 'model.account.account.create_chart_account.properties.fields_view_get', 'model.account.account.create_chart_account.properties.fields_get', 'model.account.account.create_chart_account.properties.default_get', 'model.ir.translation.search', 'model.ir.translation.fields_view_get', 'model.ir.translation.export_data', 'model.ir.translation.search_read', 'model.ir.translation.get_language', 'model.ir.translation.create', 'model.ir.translation.write', 'model.ir.translation.read', 'model.ir.translation.search_count', 'model.ir.translation.import_data', 'model.ir.translation.copy', 'model.ir.translation.fields_get', 'model.ir.translation.default_get', 'model.ir.translation.delete', 'model.webdav.collection.search', 'model.webdav.collection.fields_view_get', 'model.webdav.collection.export_data', 'model.webdav.collection.search_read', 'model.webdav.collection.import_data', 'model.webdav.collection.create', 'model.webdav.collection.write', 'model.webdav.collection.read', 'model.webdav.collection.search_count', 'model.webdav.collection.copy', 'model.webdav.collection.fields_get', 'model.webdav.collection.default_get', 'model.webdav.collection.delete', 'model.ir.translation.export.init.get_language', 'model.ir.translation.export.init.fields_view_get', 'model.ir.translation.export.init.fields_get', 'model.ir.translation.export.init.default_get', 'model.ir.translation.export.init.get_module', 'model.account.tax.group.search', 'model.account.tax.group.fields_view_get', 'model.account.tax.group.export_data', 'model.account.tax.group.search_read', 'model.account.tax.group.import_data', 'model.account.tax.group.create', 'model.account.tax.group.write', 'model.account.tax.group.read', 'model.account.tax.group.search_count', 'model.account.tax.group.copy', 'model.account.tax.group.fields_get', 'model.account.tax.group.default_get', 'model.account.tax.group.delete', 'model.ir.action.act_window.search', 'model.ir.action.act_window.fields_view_get', 'model.ir.action.act_window.export_data', 'model.ir.action.act_window.search_read', 'model.ir.action.act_window.import_data', 'model.ir.action.act_window.create', 'model.ir.action.act_window.write', 'model.ir.action.act_window.read', 'model.ir.action.act_window.search_count', 'model.ir.action.act_window.copy', 'model.ir.action.act_window.fields_get', 'model.ir.action.act_window.default_get', 'model.ir.action.act_window.delete', 'model.ir.cache.search', 'model.ir.cache.export_data', 'model.ir.cache.search_read', 'model.ir.cache.import_data', 'model.ir.cache.create', 'model.ir.cache.write', 'model.ir.cache.read', 'model.ir.cache.search_count', 'model.ir.cache.copy', 'model.ir.cache.fields_get', 'model.ir.cache.default_get', 'model.ir.cache.delete', 'model.stock.product_stock_date.init.fields_view_get', 'model.stock.product_stock_date.init.fields_get', 'model.stock.product_stock_date.init.default_get', 'model.product.category-supplier-account.tax.search', 'model.product.category-supplier-account.tax.export_data', 'model.product.category-supplier-account.tax.search_read', 'model.product.category-supplier-account.tax.import_data', 'model.product.category-supplier-account.tax.create', 'model.product.category-supplier-account.tax.write', 'model.product.category-supplier-account.tax.read', 'model.product.category-supplier-account.tax.search_count', 'model.product.category-supplier-account.tax.copy', 'model.product.category-supplier-account.tax.fields_get', 'model.product.category-supplier-account.tax.default_get', 'model.product.category-supplier-account.tax.delete', 'model.account.move.open_reconcile_lines.init.fields_view_get', 'model.account.move.open_reconcile_lines.init.fields_get', 'model.account.move.open_reconcile_lines.init.default_get', 'model.account.account.create_chart_account.init.fields_view_get', 'model.account.account.create_chart_account.init.fields_get', 'model.account.account.create_chart_account.init.default_get', 'model.ir.action.keyword.search', 'model.ir.action.keyword.fields_view_get', 'model.ir.action.keyword.export_data', 'model.ir.action.keyword.search_read', 'model.ir.action.keyword.import_data', 'model.ir.action.keyword.create', 'model.ir.action.keyword.get_keyword', 'model.ir.action.keyword.write', 'model.ir.action.keyword.read', 'model.ir.action.keyword.search_count', 'model.ir.action.keyword.models_get', 'model.ir.action.keyword.copy', 'model.ir.action.keyword.fields_get', 'model.ir.action.keyword.default_get', 'model.ir.action.keyword.delete', 'model.party.category.search', 'model.party.category.fields_view_get', 'model.party.category.export_data', 'model.party.category.search_read', 'model.party.category.import_data', 'model.party.category.create', 'model.party.category.write', 'model.party.category.read', 'model.party.category.search_count', 'model.party.category.copy', 'model.party.category.fields_get', 'model.party.category.default_get', 'model.party.category.delete', 'model.party.party-party.category.search', 'model.party.party-party.category.export_data', 'model.party.party-party.category.search_read', 'model.party.party-party.category.import_data', 'model.party.party-party.category.create', 'model.party.party-party.category.write', 'model.party.party-party.category.read', 'model.party.party-party.category.search_count', 'model.party.party-party.category.copy', 'model.party.party-party.category.fields_get', 'model.party.party-party.category.default_get', 'model.party.party-party.category.delete', 'model.sale.sale-account.invoice.search', 'model.sale.sale-account.invoice.export_data', 'model.sale.sale-account.invoice.search_read', 'model.sale.sale-account.invoice.import_data', 'model.sale.sale-account.invoice.create', 'model.sale.sale-account.invoice.write', 'model.sale.sale-account.invoice.read', 'model.sale.sale-account.invoice.search_count', 'model.sale.sale-account.invoice.copy', 'model.sale.sale-account.invoice.fields_get', 'model.sale.sale-account.invoice.default_get', 'model.sale.sale-account.invoice.delete', 'model.ir.model.field.search', 'model.ir.model.field.fields_view_get', 'model.ir.model.field.export_data', 'model.ir.model.field.search_read', 'model.ir.model.field.import_data', 'model.ir.model.field.create', 'model.ir.model.field.write', 'model.ir.model.field.read', 'model.ir.model.field.search_count', 'model.ir.model.field.copy', 'model.ir.model.field.fields_get', 'model.ir.model.field.default_get', 'model.ir.model.field.delete', 'model.res.request.link.search', 'model.res.request.link.fields_view_get', 'model.res.request.link.export_data', 'model.res.request.link.search_read', 'model.res.request.link.import_data', 'model.res.request.link.create', 'model.res.request.link.write', 'model.res.request.link.read', 'model.res.request.link.search_count', 'model.res.request.link.models_get', 'model.res.request.link.copy', 'model.res.request.link.fields_get', 'model.res.request.link.default_get', 'model.res.request.link.delete', 'model.ir.model.search', 'model.ir.model.fields_view_get', 'model.ir.model.export_data', 'model.ir.model.search_read', 'model.ir.model.import_data', 'model.ir.model.create', 'model.ir.model.write', 'model.ir.model.read', 'model.ir.model.search_count', 'model.ir.model.copy', 'model.ir.model.fields_get', 'model.ir.model.default_get', 'model.ir.model.delete', 'model.account.move.reconcile_lines.writeoff.fields_view_get', 'model.account.move.reconcile_lines.writeoff.fields_get', 'model.account.move.reconcile_lines.writeoff.default_get', 'wizard.ir.module.module.config_wizard.create', 'wizard.ir.module.module.config_wizard.execute', 'wizard.ir.module.module.config_wizard.delete', 'wizard.party.check_vies.create', 'wizard.party.check_vies.execute', 'wizard.party.check_vies.delete', 'wizard.account.move.open_account.create', 'wizard.account.move.open_account.execute', 'wizard.account.move.open_account.delete', 'wizard.account.fiscalyear.close_fiscalyear.create', 'wizard.account.fiscalyear.close_fiscalyear.execute', 'wizard.account.fiscalyear.close_fiscalyear.delete', 'wizard.account.journal.reopen_period.create', 'wizard.account.journal.reopen_period.execute', 'wizard.account.journal.reopen_period.delete', 'wizard.account.invoice.print_invoice_report.create', 'wizard.account.invoice.print_invoice_report.execute', 'wizard.account.invoice.print_invoice_report.delete', 'wizard.account.period.reopen_period.create', 'wizard.account.period.reopen_period.execute', 'wizard.account.period.reopen_period.delete', 'wizard.account.account.open_income_statement.create', 'wizard.account.account.open_income_statement.execute', 'wizard.account.account.open_income_statement.delete', 'wizard.res.user.config.create', 'wizard.res.user.config.execute', 'wizard.res.user.config.delete', 'wizard.account.account.update_chart_account.create', 'wizard.account.account.update_chart_account.execute', 'wizard.account.account.update_chart_account.delete', 'wizard.ir.ui.view_sc.open.create', 'wizard.ir.ui.view_sc.open.execute', 'wizard.ir.ui.view_sc.open.delete', 'wizard.ir.translation.set_report.create', 'wizard.ir.translation.set_report.execute', 'wizard.ir.translation.set_report.delete', 'wizard.account.journal.close_period.create', 'wizard.account.journal.close_period.execute', 'wizard.account.journal.close_period.delete', 'wizard.account.move.unreconcile_lines.create', 'wizard.account.move.unreconcile_lines.execute', 'wizard.account.move.unreconcile_lines.delete', 'wizard.account.account.open_third_party_balance.create', 'wizard.account.account.open_third_party_balance.execute', 'wizard.account.account.open_third_party_balance.delete', 'wizard.account.invoice.pay_invoice.create', 'wizard.account.invoice.pay_invoice.execute', 'wizard.account.invoice.pay_invoice.delete', 'wizard.stock.shipment.out.return.create.create', 'wizard.stock.shipment.out.return.create.execute', 'wizard.stock.shipment.out.return.create.delete', 'wizard.company.company.config.create', 'wizard.company.company.config.execute', 'wizard.company.company.config.delete', 'wizard.ir.model.print_model_graph.create', 'wizard.ir.model.print_model_graph.execute', 'wizard.ir.model.print_model_graph.delete', 'wizard.account.move.print_general_journal.create', 'wizard.account.move.print_general_journal.execute', 'wizard.account.move.print_general_journal.delete', 'wizard.stock.product.open.create', 'wizard.stock.product.open.execute', 'wizard.stock.product.open.delete', 'wizard.stock.shipment.out.assign.create', 'wizard.stock.shipment.out.assign.execute', 'wizard.stock.shipment.out.assign.delete', 'wizard.account.period.close_period.create', 'wizard.account.period.close_period.execute', 'wizard.account.period.close_period.delete', 'wizard.account.move.open_reconcile_lines.create', 'wizard.account.move.open_reconcile_lines.execute', 'wizard.account.move.open_reconcile_lines.delete', 'wizard.ir.translation.clean.create', 'wizard.ir.translation.clean.execute', 'wizard.ir.translation.clean.delete', 'wizard.account.account.open_aged_balance.create', 'wizard.account.account.open_aged_balance.execute', 'wizard.account.account.open_aged_balance.delete', 'wizard.account.account.open_chart_account.create', 'wizard.account.account.open_chart_account.execute', 'wizard.account.account.open_chart_account.delete', 'wizard.ir.module.module.install_upgrade.create', 'wizard.ir.module.module.install_upgrade.execute', 'wizard.ir.module.module.install_upgrade.delete', 'wizard.ir.translation.export.create', 'wizard.ir.translation.export.execute', 'wizard.ir.translation.export.delete', 'wizard.account.move.reconcile_lines.create', 'wizard.account.move.reconcile_lines.execute', 'wizard.account.move.reconcile_lines.delete', 'wizard.account.account.create_chart_account.create', 'wizard.account.account.create_chart_account.execute', 'wizard.account.account.create_chart_account.delete', 'wizard.account.move.open_journal.create', 'wizard.account.move.open_journal.execute', 'wizard.account.move.open_journal.delete', 'wizard.ir.module.module.config.create', 'wizard.ir.module.module.config.execute', 'wizard.ir.module.module.config.delete', 'wizard.stock.shipment.internal.assign.create', 'wizard.stock.shipment.internal.assign.execute', 'wizard.stock.shipment.internal.assign.delete', 'wizard.account.account.open_balance_sheet.create', 'wizard.account.account.open_balance_sheet.execute', 'wizard.account.account.open_balance_sheet.delete', 'wizard.account.tax.open_code.create', 'wizard.account.tax.open_code.execute', 'wizard.account.tax.open_code.delete', 'wizard.account.account.print_trial_balance.create', 'wizard.account.account.print_trial_balance.execute', 'wizard.account.account.print_trial_balance.delete', 'wizard.ir.translation.update.create', 'wizard.ir.translation.update.execute', 'wizard.ir.translation.update.delete', 'wizard.stock.location.open.create', 'wizard.stock.location.open.execute', 'wizard.stock.location.open.delete', 'wizard.ir.ui.view_sc.add.create', 'wizard.ir.ui.view_sc.add.execute', 'wizard.ir.ui.view_sc.add.delete', 'wizard.stock.inventory.complete.create', 'wizard.stock.inventory.complete.execute', 'wizard.stock.inventory.complete.delete', 'wizard.account.account.print_general_ledger.create', 'wizard.account.account.print_general_ledger.execute', 'wizard.account.account.print_general_ledger.delete', 'wizard.sale.handle.invoice.exception.create', 'wizard.sale.handle.invoice.exception.execute', 'wizard.sale.handle.invoice.exception.delete', 'wizard.sale.handle.shipment.exception.create', 'wizard.sale.handle.shipment.exception.execute', 'wizard.sale.handle.shipment.exception.delete', 'wizard.stock.shipment.in.return.assign.create', 'wizard.stock.shipment.in.return.assign.execute', 'wizard.stock.shipment.in.return.assign.delete', 'wizard.account.tax.open_chart_code.create', 'wizard.account.tax.open_chart_code.execute', 'wizard.account.tax.open_chart_code.delete', 'wizard.account.invoice.credit_invoice.create', 'wizard.account.invoice.credit_invoice.execute', 'wizard.account.invoice.credit_invoice.delete', 'wizard.sale.open_customer.create', 'wizard.sale.open_customer.execute', 'wizard.sale.open_customer.delete', 'report.account.account.third_party_balance.execute', 'report.account.account.general_ledger.execute', 'report.workflow.instance.graph.execute', 'report.ir.model.graph.execute', 'report.sale.sale.execute', 'report.party.label.execute', 'report.account.move.general_journal.execute', 'report.stock.shipment.out.picking_list.execute', 'report.account.account.aged_balance.execute', 'report.stock.shipment.internal.report.execute', 'report.account.invoice.execute', 'report.account.account.trial_balance.execute', 'report.stock.shipment.in.restocking_list.execute', 'report.stock.shipment.out.return.restocking_list.execute', 'report.party.letter.execute', 'report.stock.shipment.out.delivery_note.execute']
model.account.account.create_chart_account.account.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.account.create_chart_account.account.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.account.create_chart_account.account.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.account.template-account.tax.template.search  signatures not supported
model.account.account.template-account.tax.template.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.account.template-account.tax.template.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.account.template-account.tax.template.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.account.template-account.tax.template.create  signatures not supported
model.account.account.template-account.tax.template.write  signatures not supported
model.account.account.template-account.tax.template.read  signatures not supported
model.account.account.template-account.tax.template.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.account.template-account.tax.template.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.account.template-account.tax.template.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.account.template-account.tax.template.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.account.template-account.tax.template.delete  signatures not supported
model.ir.translation.update.init.get_language  signatures not supported
model.ir.translation.update.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.translation.update.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.translation.update.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.account.print_general_ledger.init.on_change_fiscalyear  signatures not supported
model.account.account.print_general_ledger.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.account.print_general_ledger.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.account.print_general_ledger.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.account.search  signatures not supported
model.account.account.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.account.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.account.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.account.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.account.create  signatures not supported
model.account.account.write  signatures not supported
model.account.account.read  signatures not supported
model.account.account.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.account.copy  signatures not supported
model.account.account.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.account.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.account.delete  signatures not supported
model.ir.trigger.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.trigger.search  signatures not supported
model.ir.trigger.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.trigger.on_change_on_time  signatures not supported
model.ir.trigger.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.trigger.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.trigger.create  signatures not supported
model.ir.trigger.on_change_on_delete  signatures not supported
model.ir.trigger.write  signatures not supported
model.ir.trigger.read  signatures not supported
model.ir.trigger.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.trigger.on_change_on_write  signatures not supported
model.ir.trigger.on_change_on_create  signatures not supported
model.ir.trigger.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.trigger.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.trigger.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.trigger.delete  signatures not supported
model.product.template-supplier-account.tax.search  signatures not supported
model.product.template-supplier-account.tax.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.product.template-supplier-account.tax.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.product.template-supplier-account.tax.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.product.template-supplier-account.tax.create  signatures not supported
model.product.template-supplier-account.tax.write  signatures not supported
model.product.template-supplier-account.tax.read  signatures not supported
model.product.template-supplier-account.tax.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.product.template-supplier-account.tax.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.product.template-supplier-account.tax.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.product.template-supplier-account.tax.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.product.template-supplier-account.tax.delete  signatures not supported
model.account.invoice.payment_term.line.type.search  signatures not supported
model.account.invoice.payment_term.line.type.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.invoice.payment_term.line.type.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.invoice.payment_term.line.type.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.invoice.payment_term.line.type.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.invoice.payment_term.line.type.create  signatures not supported
model.account.invoice.payment_term.line.type.write  signatures not supported
model.account.invoice.payment_term.line.type.read  signatures not supported
model.account.invoice.payment_term.line.type.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.invoice.payment_term.line.type.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.invoice.payment_term.line.type.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.invoice.payment_term.line.type.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.invoice.payment_term.line.type.delete  signatures not supported
model.ir.translation.set_report.start.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.translation.set_report.start.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.translation.set_report.start.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.action.wizard_size.search  signatures not supported
model.ir.action.wizard_size.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.action.wizard_size.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.action.wizard_size.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.action.wizard_size.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.action.wizard_size.create  signatures not supported
model.ir.action.wizard_size.write  signatures not supported
model.ir.action.wizard_size.read  signatures not supported
model.ir.action.wizard_size.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.action.wizard_size.set_size Set size for wizard dialog.
:param wizard: the wizard name
:param model: the model name
:param width: the width
:param height: the height signatures not supported
model.ir.action.wizard_size.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.action.wizard_size.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.action.wizard_size.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.action.wizard_size.delete  signatures not supported
model.ir.action.search  signatures not supported
model.ir.action.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.action.get_action_id  signatures not supported
model.ir.action.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.action.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.action.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.action.create  signatures not supported
model.ir.action.write  signatures not supported
model.ir.action.read  signatures not supported
model.ir.action.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.action.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.action.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.action.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.action.delete  signatures not supported
model.sale.configuration.search  signatures not supported
model.sale.configuration.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.sale.configuration.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.sale.configuration.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.sale.configuration.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.sale.configuration.create  signatures not supported
model.sale.configuration.write  signatures not supported
model.sale.configuration.read  signatures not supported
model.sale.configuration.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.sale.configuration.copy  signatures not supported
model.sale.configuration.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.sale.configuration.default_get  signatures not supported
model.sale.configuration.delete  signatures not supported
model.sale.sale-ignored-account.invoice.search  signatures not supported
model.sale.sale-ignored-account.invoice.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.sale.sale-ignored-account.invoice.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.sale.sale-ignored-account.invoice.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.sale.sale-ignored-account.invoice.create  signatures not supported
model.sale.sale-ignored-account.invoice.write  signatures not supported
model.sale.sale-ignored-account.invoice.read  signatures not supported
model.sale.sale-ignored-account.invoice.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.sale.sale-ignored-account.invoice.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.sale.sale-ignored-account.invoice.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.sale.sale-ignored-account.invoice.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.sale.sale-ignored-account.invoice.delete  signatures not supported
model.account.move.search  signatures not supported
model.account.move.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.move.button_draft  signatures not supported
model.account.move.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.move.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.move.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.move.create  signatures not supported
model.account.move.write  signatures not supported
model.account.move.read  signatures not supported
model.account.move.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.move.on_change_with_date  signatures not supported
model.account.move.button_post  signatures not supported
model.account.move.copy  signatures not supported
model.account.move.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.move.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.move.delete  signatures not supported
model.account.invoice.pay_invoice.ask.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.invoice.pay_invoice.ask.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.invoice.pay_invoice.ask.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.invoice.pay_invoice.ask.on_change_lines  signatures not supported
model.account.account.open_third_party_balance.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.account.open_third_party_balance.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.account.open_third_party_balance.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.action.url.search  signatures not supported
model.ir.action.url.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.action.url.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.action.url.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.action.url.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.action.url.create  signatures not supported
model.ir.action.url.write  signatures not supported
model.ir.action.url.read  signatures not supported
model.ir.action.url.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.action.url.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.action.url.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.action.url.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.action.url.delete  signatures not supported
model.party.check_vies.no_check.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.party.check_vies.no_check.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.party.check_vies.no_check.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.journal.type.search  signatures not supported
model.account.journal.type.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.journal.type.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.journal.type.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.journal.type.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.journal.type.create  signatures not supported
model.account.journal.type.write  signatures not supported
model.account.journal.type.read  signatures not supported
model.account.journal.type.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.journal.type.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.journal.type.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.journal.type.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.journal.type.delete  signatures not supported
model.stock.location.search  signatures not supported
model.stock.location.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.stock.location.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.stock.location.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.stock.location.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.stock.location.create  signatures not supported
model.stock.location.write  signatures not supported
model.stock.location.read  signatures not supported
model.stock.location.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.stock.location.copy  signatures not supported
model.stock.location.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.stock.location.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.stock.location.delete  signatures not supported
model.sale.line.delete  signatures not supported
model.sale.line.search  signatures not supported
model.sale.line.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.sale.line.on_change_unit  signatures not supported
model.sale.line.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.sale.line.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.sale.line.on_change_quantity  signatures not supported
model.sale.line.create  signatures not supported
model.sale.line.on_change_with_amount  signatures not supported
model.sale.line.write  signatures not supported
model.sale.line.on_change_with_unit_digits  signatures not supported
model.sale.line.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.sale.line.read  signatures not supported
model.sale.line.on_change_product  signatures not supported
model.sale.line.copy  signatures not supported
model.sale.line.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.sale.line.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.sale.line.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.account.print_trial_balance.init.on_change_fiscalyear  signatures not supported
model.account.account.print_trial_balance.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.account.print_trial_balance.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.account.print_trial_balance.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.stock.inventory.line.search  signatures not supported
model.stock.inventory.line.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.stock.inventory.line.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.stock.inventory.line.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.stock.inventory.line.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.stock.inventory.line.create  signatures not supported
model.stock.inventory.line.write  signatures not supported
model.stock.inventory.line.read  signatures not supported
model.stock.inventory.line.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.stock.inventory.line.on_change_product  signatures not supported
model.stock.inventory.line.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.stock.inventory.line.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.stock.inventory.line.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.stock.inventory.line.delete  signatures not supported
model.ir.sequence.search  signatures not supported
model.ir.sequence.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.sequence.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.sequence.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.sequence.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.sequence.create  signatures not supported
model.ir.sequence.write  signatures not supported
model.ir.sequence.read  signatures not supported
model.ir.sequence.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.sequence.code_get  signatures not supported
model.ir.sequence.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.sequence.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.sequence.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.sequence.delete  signatures not supported
model.account.tax.open_chart_code.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.tax.open_chart_code.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.tax.open_chart_code.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.trigger.log.search  signatures not supported
model.ir.trigger.log.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.trigger.log.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.trigger.log.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.trigger.log.create  signatures not supported
model.ir.trigger.log.write  signatures not supported
model.ir.trigger.log.read  signatures not supported
model.ir.trigger.log.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.trigger.log.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.trigger.log.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.trigger.log.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.trigger.log.delete  signatures not supported
model.party.contact_mechanism.delete  signatures not supported
model.party.contact_mechanism.search  signatures not supported
model.party.contact_mechanism.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.party.contact_mechanism.on_change_other_value  signatures not supported
model.party.contact_mechanism.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.party.contact_mechanism.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.party.contact_mechanism.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.party.contact_mechanism.on_change_skype  signatures not supported
model.party.contact_mechanism.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.party.contact_mechanism.write  signatures not supported
model.party.contact_mechanism.read  signatures not supported
model.party.contact_mechanism.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.party.contact_mechanism.on_change_value  signatures not supported
model.party.contact_mechanism.on_change_website  signatures not supported
model.party.contact_mechanism.create  signatures not supported
model.party.contact_mechanism.on_change_email  signatures not supported
model.party.contact_mechanism.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.party.contact_mechanism.on_change_sip  signatures not supported
model.party.contact_mechanism.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.product.uom.search  signatures not supported
model.product.uom.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.product.uom.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.product.uom.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.product.uom.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.product.uom.create  signatures not supported
model.product.uom.on_change_factor  signatures not supported
model.product.uom.write  signatures not supported
model.product.uom.read  signatures not supported
model.product.uom.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.product.uom.on_change_rate  signatures not supported
model.product.uom.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.product.uom.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.product.uom.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.product.uom.delete  signatures not supported
model.res.user.get_preferences_fields_view  signatures not supported
model.res.user.search  signatures not supported
model.res.user.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.res.user.on_change_main_company  signatures not supported
model.res.user.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.res.user.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.res.user.timezones  signatures not supported
model.res.user.create  signatures not supported
model.res.user.write  signatures not supported
model.res.user.read  signatures not supported
model.res.user.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.res.user.get_preferences  signatures not supported
model.res.user.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.res.user.set_preferences Set user preferences.

:param values: a dictionary with values
:param old_password: the previous password if password is in values signatures not supported
model.res.user.copy  signatures not supported
model.res.user.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.res.user.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.res.user.delete  signatures not supported
model.ir.rule.search  signatures not supported
model.ir.rule.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.rule.get_operand  signatures not supported
model.ir.rule.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.rule.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.rule.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.rule.create  signatures not supported
model.ir.rule.write  signatures not supported
model.ir.rule.read  signatures not supported
model.ir.rule.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.rule.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.rule.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.rule.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.rule.delete  signatures not supported
model.stock.shipment.in.return.search  signatures not supported
model.stock.shipment.in.return.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.stock.shipment.in.return.button_draft  signatures not supported
model.stock.shipment.in.return.workflow_trigger_validate Trigger validate event

:param ids: a list of id or an id signatures not supported
model.stock.shipment.in.return.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.stock.shipment.in.return.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.stock.shipment.in.return.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.stock.shipment.in.return.create  signatures not supported
model.stock.shipment.in.return.write  signatures not supported
model.stock.shipment.in.return.read  signatures not supported
model.stock.shipment.in.return.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.stock.shipment.in.return.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.stock.shipment.in.return.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.stock.shipment.in.return.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.stock.shipment.in.return.delete  signatures not supported
model.account.move.reconciliation.search  signatures not supported
model.account.move.reconciliation.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.move.reconciliation.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.move.reconciliation.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.move.reconciliation.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.move.reconciliation.create  signatures not supported
model.account.move.reconciliation.write  signatures not supported
model.account.move.reconciliation.read  signatures not supported
model.account.move.reconciliation.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.move.reconciliation.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.move.reconciliation.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.move.reconciliation.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.move.reconciliation.delete  signatures not supported
model.ir.action.wizard.search  signatures not supported
model.ir.action.wizard.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.action.wizard.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.action.wizard.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.action.wizard.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.action.wizard.create  signatures not supported
model.ir.action.wizard.write  signatures not supported
model.ir.action.wizard.read  signatures not supported
model.ir.action.wizard.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.action.wizard.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.action.wizard.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.action.wizard.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.action.wizard.delete  signatures not supported
model.account.journal.search  signatures not supported
model.account.journal.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.journal.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.journal.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.journal.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.journal.create  signatures not supported
model.account.journal.get_types  signatures not supported
model.account.journal.write  signatures not supported
model.account.journal.read  signatures not supported
model.account.journal.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.journal.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.journal.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.journal.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.journal.delete  signatures not supported
model.account.account.open_income_statement.init.on_change_fiscalyear  signatures not supported
model.account.account.open_income_statement.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.account.open_income_statement.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.account.open_income_statement.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.sale.line-recreated-stock.move.search  signatures not supported
model.sale.line-recreated-stock.move.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.sale.line-recreated-stock.move.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.sale.line-recreated-stock.move.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.sale.line-recreated-stock.move.create  signatures not supported
model.sale.line-recreated-stock.move.write  signatures not supported
model.sale.line-recreated-stock.move.read  signatures not supported
model.sale.line-recreated-stock.move.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.sale.line-recreated-stock.move.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.sale.line-recreated-stock.move.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.sale.line-recreated-stock.move.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.sale.line-recreated-stock.move.delete  signatures not supported
model.ir.translation.set_report.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.translation.set_report.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.translation.set_report.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.workflow.transition-workflow.instance.search  signatures not supported
model.workflow.transition-workflow.instance.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.workflow.transition-workflow.instance.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.workflow.transition-workflow.instance.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.workflow.transition-workflow.instance.read  signatures not supported
model.workflow.transition-workflow.instance.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.workflow.transition-workflow.instance.fields_get  signatures not supported
model.workflow.transition-workflow.instance.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.model.data.search  signatures not supported
model.ir.model.data.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.model.data.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.model.data.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.model.data.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.model.data.create  signatures not supported
model.ir.model.data.write  signatures not supported
model.ir.model.data.read  signatures not supported
model.ir.model.data.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.model.data.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.model.data.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.model.data.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.model.data.delete  signatures not supported
model.ir.rule.group.search  signatures not supported
model.ir.rule.group.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.rule.group.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.rule.group.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.rule.group.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.rule.group.create  signatures not supported
model.ir.rule.group.write  signatures not supported
model.ir.rule.group.read  signatures not supported
model.ir.rule.group.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.rule.group.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.rule.group.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.rule.group.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.rule.group.delete  signatures not supported
model.account.account.type.search  signatures not supported
model.account.account.type.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.account.type.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.account.type.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.account.type.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.account.type.create  signatures not supported
model.account.account.type.write  signatures not supported
model.account.account.type.read  signatures not supported
model.account.account.type.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.account.type.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.account.type.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.account.type.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.account.type.delete  signatures not supported
model.account.tax.code.template.search  signatures not supported
model.account.tax.code.template.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.tax.code.template.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.tax.code.template.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.tax.code.template.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.tax.code.template.create  signatures not supported
model.account.tax.code.template.write  signatures not supported
model.account.tax.code.template.read  signatures not supported
model.account.tax.code.template.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.tax.code.template.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.tax.code.template.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.tax.code.template.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.tax.code.template.delete  signatures not supported
model.account.account.deferral.search  signatures not supported
model.account.account.deferral.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.account.deferral.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.account.deferral.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.account.deferral.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.account.deferral.create  signatures not supported
model.account.account.deferral.write  signatures not supported
model.account.account.deferral.read  signatures not supported
model.account.account.deferral.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.account.deferral.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.account.deferral.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.account.deferral.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.account.deferral.delete  signatures not supported
model.party.configuration.search  signatures not supported
model.party.configuration.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.party.configuration.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.party.configuration.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.party.configuration.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.party.configuration.create  signatures not supported
model.party.configuration.write  signatures not supported
model.party.configuration.read  signatures not supported
model.party.configuration.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.party.configuration.copy  signatures not supported
model.party.configuration.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.party.configuration.default_get  signatures not supported
model.party.configuration.delete  signatures not supported
model.account.fiscalyear.close_fiscalyear.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.fiscalyear.close_fiscalyear.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.fiscalyear.close_fiscalyear.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.sale.line-account.tax.search  signatures not supported
model.sale.line-account.tax.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.sale.line-account.tax.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.sale.line-account.tax.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.sale.line-account.tax.create  signatures not supported
model.sale.line-account.tax.write  signatures not supported
model.sale.line-account.tax.read  signatures not supported
model.sale.line-account.tax.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.sale.line-account.tax.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.sale.line-account.tax.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.sale.line-account.tax.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.sale.line-account.tax.delete  signatures not supported
model.res.request.reference.search  signatures not supported
model.res.request.reference.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.res.request.reference.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.res.request.reference.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.res.request.reference.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.res.request.reference.create  signatures not supported
model.res.request.reference.write  signatures not supported
model.res.request.reference.read  signatures not supported
model.res.request.reference.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.res.request.reference.links_get  signatures not supported
model.res.request.reference.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.res.request.reference.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.res.request.reference.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.res.request.reference.delete  signatures not supported
model.sale.line-account.invoice.line.search  signatures not supported
model.sale.line-account.invoice.line.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.sale.line-account.invoice.line.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.sale.line-account.invoice.line.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.sale.line-account.invoice.line.create  signatures not supported
model.sale.line-account.invoice.line.write  signatures not supported
model.sale.line-account.invoice.line.read  signatures not supported
model.sale.line-account.invoice.line.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.sale.line-account.invoice.line.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.sale.line-account.invoice.line.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.sale.line-account.invoice.line.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.sale.line-account.invoice.line.delete  signatures not supported
model.company.employee.search  signatures not supported
model.company.employee.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.company.employee.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.company.employee.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.company.employee.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.company.employee.create  signatures not supported
model.company.employee.write  signatures not supported
model.company.employee.read  signatures not supported
model.company.employee.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.company.employee.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.company.employee.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.company.employee.on_change_with_vat_code  signatures not supported
model.company.employee.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.company.employee.delete  signatures not supported
model.account.account.open_balance_sheet.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.account.open_balance_sheet.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.account.open_balance_sheet.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.stock.period.search  signatures not supported
model.stock.period.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.stock.period.button_draft  signatures not supported
model.stock.period.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.stock.period.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.stock.period.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.stock.period.create  signatures not supported
model.stock.period.write  signatures not supported
model.stock.period.read  signatures not supported
model.stock.period.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.stock.period.button_close  signatures not supported
model.stock.period.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.stock.period.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.stock.period.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.stock.period.delete  signatures not supported
model.company.company.config.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.company.company.config.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.company.company.config.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.journal.view.search  signatures not supported
model.account.journal.view.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.journal.view.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.journal.view.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.journal.view.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.journal.view.create  signatures not supported
model.account.journal.view.write  signatures not supported
model.account.journal.view.read  signatures not supported
model.account.journal.view.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.journal.view.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.journal.view.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.journal.view.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.journal.view.delete  signatures not supported
model.ir.model.access.search  signatures not supported
model.ir.model.access.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.model.access.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.model.access.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.model.access.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.model.access.create  signatures not supported
model.ir.model.access.write  signatures not supported
model.ir.model.access.read  signatures not supported
model.ir.model.access.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.model.access.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.model.access.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.model.access.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.model.access.delete  signatures not supported
model.stock.shipment.out.assign.assign_failed.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.stock.shipment.out.assign.assign_failed.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.stock.shipment.out.assign.assign_failed.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.move.print_general_journal.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.move.print_general_journal.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.move.print_general_journal.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.tax.rule.line.search  signatures not supported
model.account.tax.rule.line.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.tax.rule.line.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.tax.rule.line.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.tax.rule.line.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.tax.rule.line.create  signatures not supported
model.account.tax.rule.line.write  signatures not supported
model.account.tax.rule.line.read  signatures not supported
model.account.tax.rule.line.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.tax.rule.line.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.tax.rule.line.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.tax.rule.line.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.tax.rule.line.delete  signatures not supported
model.account.account.update_chart_account.start.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.account.update_chart_account.start.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.account.update_chart_account.start.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.property.search  signatures not supported
model.ir.property.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.property.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.property.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.property.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.property.create  signatures not supported
model.ir.property.write  signatures not supported
model.ir.property.read  signatures not supported
model.ir.property.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.property.models_get  signatures not supported
model.ir.property.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.property.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.property.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.property.delete  signatures not supported
model.ir.module.module.config_wizard.first.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.module.module.config_wizard.first.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.module.module.config_wizard.first.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.invoice.credit_invoice.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.invoice.credit_invoice.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.invoice.credit_invoice.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.module.module.install_upgrade.start.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.module.module.install_upgrade.start.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.module.module.install_upgrade.start.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.action.act_window.view.search  signatures not supported
model.ir.action.act_window.view.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.action.act_window.view.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.action.act_window.view.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.action.act_window.view.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.action.act_window.view.create  signatures not supported
model.ir.action.act_window.view.write  signatures not supported
model.ir.action.act_window.view.read  signatures not supported
model.ir.action.act_window.view.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.action.act_window.view.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.action.act_window.view.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.action.act_window.view.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.action.act_window.view.delete  signatures not supported
model.account.tax.code.write  signatures not supported
model.account.tax.code.search  signatures not supported
model.account.tax.code.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.tax.code.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.tax.code.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.tax.code.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.tax.code.create  signatures not supported
model.account.tax.code.on_change_with_currency_digits  signatures not supported
model.account.tax.code.read  signatures not supported
model.account.tax.code.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.tax.code.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.tax.code.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.tax.code.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.tax.code.delete  signatures not supported
model.stock.shipment.internal.search  signatures not supported
model.stock.shipment.internal.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.stock.shipment.internal.button_draft  signatures not supported
model.stock.shipment.internal.workflow_trigger_validate Trigger validate event

:param ids: a list of id or an id signatures not supported
model.stock.shipment.internal.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.stock.shipment.internal.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.stock.shipment.internal.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.stock.shipment.internal.create  signatures not supported
model.stock.shipment.internal.write  signatures not supported
model.stock.shipment.internal.read  signatures not supported
model.stock.shipment.internal.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.stock.shipment.internal.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.stock.shipment.internal.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.stock.shipment.internal.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.stock.shipment.internal.delete  signatures not supported
model.stock.inventory.search  signatures not supported
model.stock.inventory.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.stock.inventory.workflow_trigger_validate Trigger validate event

:param ids: a list of id or an id signatures not supported
model.stock.inventory.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.stock.inventory.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.stock.inventory.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.stock.inventory.create  signatures not supported
model.stock.inventory.write  signatures not supported
model.stock.inventory.read  signatures not supported
model.stock.inventory.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.stock.inventory.copy  signatures not supported
model.stock.inventory.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.stock.inventory.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.stock.inventory.delete  signatures not supported
model.ir.action.report.search  signatures not supported
model.ir.action.report.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.action.report.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.action.report.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.action.report.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.action.report.create  signatures not supported
model.ir.action.report.write  signatures not supported
model.ir.action.report.read  signatures not supported
model.ir.action.report.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.action.report.copy  signatures not supported
model.ir.action.report.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.action.report.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.action.report.delete  signatures not supported
model.ir.export.search  signatures not supported
model.ir.export.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.export.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.export.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.export.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.export.create  signatures not supported
model.ir.export.write  signatures not supported
model.ir.export.read  signatures not supported
model.ir.export.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.export.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.export.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.export.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.export.delete  signatures not supported
model.company.company.search  signatures not supported
model.company.company.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.company.company.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.company.company.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.company.company.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.company.company.create  signatures not supported
model.company.company.write  signatures not supported
model.company.company.read  signatures not supported
model.company.company.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.company.company.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.company.company.copy  signatures not supported
model.company.company.on_change_with_vat_code  signatures not supported
model.company.company.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.company.company.delete  signatures not supported
model.ir.module.module.config_wizard.item.search  signatures not supported
model.ir.module.module.config_wizard.item.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.module.module.config_wizard.item.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.module.module.config_wizard.item.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.module.module.config_wizard.item.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.module.module.config_wizard.item.create  signatures not supported
model.ir.module.module.config_wizard.item.write  signatures not supported
model.ir.module.module.config_wizard.item.read  signatures not supported
model.ir.module.module.config_wizard.item.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.module.module.config_wizard.item.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.module.module.config_wizard.item.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.module.module.config_wizard.item.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.module.module.config_wizard.item.delete  signatures not supported
model.currency.currency.search  signatures not supported
model.currency.currency.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.currency.currency.compute Take a currency and an amount
Return the amount to the new currency
Use the rate of the date of the context or the current date if ids are
given signatures not supported
model.currency.currency.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.currency.currency.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.currency.currency.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.currency.currency.create  signatures not supported
model.currency.currency.write  signatures not supported
model.currency.currency.on_change_with_rate  signatures not supported
model.currency.currency.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.currency.currency.read  signatures not supported
model.currency.currency.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.currency.currency.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.currency.currency.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.currency.currency.delete  signatures not supported
model.ir.ui.view.search  signatures not supported
model.ir.ui.view.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.ui.view.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.ui.view.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.ui.view.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.ui.view.create  signatures not supported
model.ir.ui.view.write  signatures not supported
model.ir.ui.view.read  signatures not supported
model.ir.ui.view.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.ui.view.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.ui.view.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.ui.view.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.ui.view.delete  signatures not supported
model.account.tax.write  signatures not supported
model.account.tax.search  signatures not supported
model.account.tax.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.tax.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.tax.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.tax.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.tax.create  signatures not supported
model.account.tax.on_change_with_currency_digits  signatures not supported
model.account.tax.read  signatures not supported
model.account.tax.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.tax.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.tax.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.tax.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.tax.delete  signatures not supported
model.stock.shipment.in.search  signatures not supported
model.stock.shipment.in.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.stock.shipment.in.button_draft  signatures not supported
model.stock.shipment.in.workflow_trigger_validate Trigger validate event

:param ids: a list of id or an id signatures not supported
model.stock.shipment.in.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.stock.shipment.in.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.stock.shipment.in.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.stock.shipment.in.create  signatures not supported
model.stock.shipment.in.on_change_supplier  signatures not supported
model.stock.shipment.in.write  signatures not supported
model.stock.shipment.in.read  signatures not supported
model.stock.shipment.in.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.stock.shipment.in.copy  signatures not supported
model.stock.shipment.in.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.stock.shipment.in.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.stock.shipment.in.delete  signatures not supported
model.ir.model.field-res.group.search  signatures not supported
model.ir.model.field-res.group.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.model.field-res.group.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.model.field-res.group.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.model.field-res.group.create  signatures not supported
model.ir.model.field-res.group.write  signatures not supported
model.ir.model.field-res.group.read  signatures not supported
model.ir.model.field-res.group.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.model.field-res.group.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.model.field-res.group.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.model.field-res.group.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.model.field-res.group.delete  signatures not supported
model.stock.configuration.search  signatures not supported
model.stock.configuration.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.stock.configuration.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.stock.configuration.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.stock.configuration.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.stock.configuration.create  signatures not supported
model.stock.configuration.write  signatures not supported
model.stock.configuration.read  signatures not supported
model.stock.configuration.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.stock.configuration.copy  signatures not supported
model.stock.configuration.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.stock.configuration.default_get  signatures not supported
model.stock.configuration.delete  signatures not supported
model.workflow.search  signatures not supported
model.workflow.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.workflow.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.workflow.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.workflow.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.workflow.create  signatures not supported
model.workflow.write  signatures not supported
model.workflow.read  signatures not supported
model.workflow.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.workflow.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.workflow.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.workflow.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.workflow.delete  signatures not supported
model.account.journal.period.search  signatures not supported
model.account.journal.period.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.journal.period.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.journal.period.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.journal.period.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.journal.period.create  signatures not supported
model.account.journal.period.write  signatures not supported
model.account.journal.period.read  signatures not supported
model.account.journal.period.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.journal.period.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.journal.period.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.journal.period.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.journal.period.delete  signatures not supported
model.account.tax.rule.line.template.search  signatures not supported
model.account.tax.rule.line.template.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.tax.rule.line.template.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.tax.rule.line.template.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.tax.rule.line.template.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.tax.rule.line.template.create  signatures not supported
model.account.tax.rule.line.template.write  signatures not supported
model.account.tax.rule.line.template.read  signatures not supported
model.account.tax.rule.line.template.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.tax.rule.line.template.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.tax.rule.line.template.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.tax.rule.line.template.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.tax.rule.line.template.delete  signatures not supported
model.account.invoice.line-account.tax.search  signatures not supported
model.account.invoice.line-account.tax.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.invoice.line-account.tax.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.invoice.line-account.tax.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.invoice.line-account.tax.create  signatures not supported
model.account.invoice.line-account.tax.write  signatures not supported
model.account.invoice.line-account.tax.read  signatures not supported
model.account.invoice.line-account.tax.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.invoice.line-account.tax.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.invoice.line-account.tax.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.invoice.line-account.tax.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.invoice.line-account.tax.delete  signatures not supported
model.account.account.open_chart_account.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.account.open_chart_account.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.account.open_chart_account.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.ui.menu.search  signatures not supported
model.ir.ui.menu.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.ui.menu.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.ui.menu.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.ui.menu.list_icons  signatures not supported
model.ir.ui.menu.create  signatures not supported
model.ir.ui.menu.write  signatures not supported
model.ir.ui.menu.read  signatures not supported
model.ir.ui.menu.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.ui.menu.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.ui.menu.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.ui.menu.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.ui.menu.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.ui.menu.delete  signatures not supported
model.account.move.open_journal.ask.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.move.open_journal.ask.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.move.open_journal.ask.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.ui.icon.search  signatures not supported
model.ir.ui.icon.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.ui.icon.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.ui.icon.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.ui.icon.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.ui.icon.create  signatures not supported
model.ir.ui.icon.write  signatures not supported
model.ir.ui.icon.read  signatures not supported
model.ir.ui.icon.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.ui.icon.list_icons  signatures not supported
model.ir.ui.icon.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.ui.icon.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.ui.icon.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.ui.icon.delete  signatures not supported
model.workflow.trigger.search  signatures not supported
model.workflow.trigger.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.workflow.trigger.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.workflow.trigger.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.workflow.trigger.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.workflow.trigger.read  signatures not supported
model.workflow.trigger.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.workflow.trigger.fields_get  signatures not supported
model.workflow.trigger.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.invoice.payment_term.line.write  signatures not supported
model.account.invoice.payment_term.line.search  signatures not supported
model.account.invoice.payment_term.line.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.invoice.payment_term.line.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.invoice.payment_term.line.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.invoice.payment_term.line.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.invoice.payment_term.line.create  signatures not supported
model.account.invoice.payment_term.line.delete  signatures not supported
model.account.invoice.payment_term.line.get_delay  signatures not supported
model.account.invoice.payment_term.line.on_change_with_currency_digits  signatures not supported
model.account.invoice.payment_term.line.read  signatures not supported
model.account.invoice.payment_term.line.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.invoice.payment_term.line.get_type  signatures not supported
model.account.invoice.payment_term.line.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.invoice.payment_term.line.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.invoice.payment_term.line.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.invoice.payment_term.line.on_change_type  signatures not supported
model.stock.shipment.internal.assign.assign_failed.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.stock.shipment.internal.assign.assign_failed.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.stock.shipment.internal.assign.assign_failed.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.party.check_vies.check.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.party.check_vies.check.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.party.check_vies.check.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.sale.line-ignored-stock.move.search  signatures not supported
model.sale.line-ignored-stock.move.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.sale.line-ignored-stock.move.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.sale.line-ignored-stock.move.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.sale.line-ignored-stock.move.create  signatures not supported
model.sale.line-ignored-stock.move.write  signatures not supported
model.sale.line-ignored-stock.move.read  signatures not supported
model.sale.line-ignored-stock.move.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.sale.line-ignored-stock.move.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.sale.line-ignored-stock.move.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.sale.line-ignored-stock.move.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.sale.line-ignored-stock.move.delete  signatures not supported
model.ir.date.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.date.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.date.today Current date

:return: a current datetime.date signatures not supported
model.account.tax.rule.template.search  signatures not supported
model.account.tax.rule.template.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.tax.rule.template.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.tax.rule.template.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.tax.rule.template.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.tax.rule.template.create  signatures not supported
model.account.tax.rule.template.write  signatures not supported
model.account.tax.rule.template.read  signatures not supported
model.account.tax.rule.template.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.tax.rule.template.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.tax.rule.template.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.tax.rule.template.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.tax.rule.template.delete  signatures not supported
model.res.request.search  signatures not supported
model.res.request.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.res.request.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.res.request.on_change_with_number_references  signatures not supported
model.res.request.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.res.request.create  signatures not supported
model.res.request.request_close  signatures not supported
model.res.request.write  signatures not supported
model.res.request.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.res.request.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.res.request.read  signatures not supported
model.res.request.request_reply  signatures not supported
model.res.request.request_get  signatures not supported
model.res.request.request_send  signatures not supported
model.res.request.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.res.request.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.res.request.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.res.request.delete  signatures not supported
model.ir.lang.search  signatures not supported
model.ir.lang.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.lang.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.lang.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.lang.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.lang.create  signatures not supported
model.ir.lang.write  signatures not supported
model.ir.lang.read  signatures not supported
model.ir.lang.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.lang.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.lang.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.lang.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.lang.delete  signatures not supported
model.ir.ui.view_sc.search  signatures not supported
model.ir.ui.view_sc.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.ui.view_sc.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.ui.view_sc.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.ui.view_sc.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.ui.view_sc.create  signatures not supported
model.ir.ui.view_sc.get_sc Provide user's shortcuts signatures not supported
model.ir.ui.view_sc.write  signatures not supported
model.ir.ui.view_sc.read  signatures not supported
model.ir.ui.view_sc.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.ui.view_sc.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.ui.view_sc.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.ui.view_sc.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.ui.view_sc.delete  signatures not supported
model.account.tax.line.on_change_tax  signatures not supported
model.account.tax.line.search  signatures not supported
model.account.tax.line.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.tax.line.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.tax.line.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.tax.line.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.tax.line.create  signatures not supported
model.account.tax.line.on_change_with_currency_digits  signatures not supported
model.account.tax.line.read  signatures not supported
model.account.tax.line.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.tax.line.write  signatures not supported
model.account.tax.line.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.tax.line.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.tax.line.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.tax.line.delete  signatures not supported
model.stock.move.delete  signatures not supported
model.stock.move.search  signatures not supported
model.stock.move.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.stock.move.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.stock.move.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.stock.move.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.stock.move.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.stock.move.create  signatures not supported
model.stock.move.write  signatures not supported
model.stock.move.on_change_with_unit_digits  signatures not supported
model.stock.move.on_change_with_unit_price_required  signatures not supported
model.stock.move.read  signatures not supported
model.stock.move.on_change_product  signatures not supported
model.stock.move.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.stock.move.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.stock.move.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.stock.move.on_change_uom  signatures not supported
model.account.period.search  signatures not supported
model.account.period.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.period.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.period.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.period.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.period.create  signatures not supported
model.account.period.write  signatures not supported
model.account.period.read  signatures not supported
model.account.period.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.period.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.period.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.period.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.period.delete  signatures not supported
model.account.move.line.on_change_party  signatures not supported
model.account.move.line.search  signatures not supported
model.account.move.line.fields_view_get  signatures not supported
model.account.move.line.on_change_credit  signatures not supported
model.account.move.line.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.move.line.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.move.line.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.move.line.create  signatures not supported
model.account.move.line.copy  signatures not supported
model.account.move.line.on_change_debit  signatures not supported
model.account.move.line.write  signatures not supported
model.account.move.line.read  signatures not supported
model.account.move.line.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.move.line.on_write  signatures not supported
model.account.move.line.on_change_account  signatures not supported
model.account.move.line.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.move.line.default_get  signatures not supported
model.account.move.line.delete  signatures not supported
model.ir.ui.menu-res.group.search  signatures not supported
model.ir.ui.menu-res.group.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.ui.menu-res.group.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.ui.menu-res.group.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.ui.menu-res.group.create  signatures not supported
model.ir.ui.menu-res.group.write  signatures not supported
model.ir.ui.menu-res.group.read  signatures not supported
model.ir.ui.menu-res.group.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.ui.menu-res.group.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.ui.menu-res.group.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.ui.menu-res.group.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.ui.menu-res.group.delete  signatures not supported
model.sale.sale-recreated-account.invoice.search  signatures not supported
model.sale.sale-recreated-account.invoice.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.sale.sale-recreated-account.invoice.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.sale.sale-recreated-account.invoice.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.sale.sale-recreated-account.invoice.create  signatures not supported
model.sale.sale-recreated-account.invoice.write  signatures not supported
model.sale.sale-recreated-account.invoice.read  signatures not supported
model.sale.sale-recreated-account.invoice.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.sale.sale-recreated-account.invoice.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.sale.sale-recreated-account.invoice.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.sale.sale-recreated-account.invoice.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.sale.sale-recreated-account.invoice.delete  signatures not supported
model.ir.module.module.dependency.search  signatures not supported
model.ir.module.module.dependency.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.module.module.dependency.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.module.module.dependency.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.module.module.dependency.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.module.module.dependency.create  signatures not supported
model.ir.module.module.dependency.write  signatures not supported
model.ir.module.module.dependency.read  signatures not supported
model.ir.module.module.dependency.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.module.module.dependency.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.module.module.dependency.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.module.module.dependency.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.module.module.dependency.delete  signatures not supported
model.account.account.type.template.search  signatures not supported
model.account.account.type.template.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.account.type.template.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.account.type.template.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.account.type.template.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.account.type.template.create  signatures not supported
model.account.account.type.template.write  signatures not supported
model.account.account.type.template.read  signatures not supported
model.account.account.type.template.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.account.type.template.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.account.type.template.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.account.type.template.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.account.type.template.delete  signatures not supported
model.ir.action-res.group.search  signatures not supported
model.ir.action-res.group.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.action-res.group.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.action-res.group.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.action-res.group.create  signatures not supported
model.ir.action-res.group.write  signatures not supported
model.ir.action-res.group.read  signatures not supported
model.ir.action-res.group.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.action-res.group.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.action-res.group.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.action-res.group.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.action-res.group.delete  signatures not supported
model.product.template-customer-account.tax.search  signatures not supported
model.product.template-customer-account.tax.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.product.template-customer-account.tax.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.product.template-customer-account.tax.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.product.template-customer-account.tax.create  signatures not supported
model.product.template-customer-account.tax.write  signatures not supported
model.product.template-customer-account.tax.read  signatures not supported
model.product.template-customer-account.tax.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.product.template-customer-account.tax.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.product.template-customer-account.tax.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.product.template-customer-account.tax.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.product.template-customer-account.tax.delete  signatures not supported
model.account.account.template.search  signatures not supported
model.account.account.template.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.account.template.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.account.template.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.account.template.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.account.template.create  signatures not supported
model.account.account.template.write  signatures not supported
model.account.account.template.read  signatures not supported
model.account.account.template.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.account.template.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.account.template.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.account.template.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.account.template.delete  signatures not supported
model.party.address.on_change_country  signatures not supported
model.party.address.search  signatures not supported
model.party.address.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.party.address.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.party.address.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.party.address.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.party.address.create  signatures not supported
model.party.address.write  signatures not supported
model.party.address.read  signatures not supported
model.party.address.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.party.address.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.party.address.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.party.address.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.party.address.delete  signatures not supported
model.ir.translation.clean.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.translation.clean.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.translation.clean.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.stock.location_stock_date.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.stock.location_stock_date.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.stock.location_stock_date.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.rule.group-res.group.search  signatures not supported
model.ir.rule.group-res.group.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.rule.group-res.group.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.rule.group-res.group.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.rule.group-res.group.create  signatures not supported
model.ir.rule.group-res.group.write  signatures not supported
model.ir.rule.group-res.group.read  signatures not supported
model.ir.rule.group-res.group.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.rule.group-res.group.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.rule.group-res.group.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.rule.group-res.group.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.rule.group-res.group.delete  signatures not supported
model.account.invoice.line.write  signatures not supported
model.account.invoice.line.search  signatures not supported
model.account.invoice.line.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.invoice.line.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.invoice.line.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.invoice.line.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.invoice.line.create  signatures not supported
model.account.invoice.line.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.invoice.line.on_change_with_currency_digits  signatures not supported
model.account.invoice.line.on_change_with_unit_digits  signatures not supported
model.account.invoice.line.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.invoice.line.read  signatures not supported
model.account.invoice.line.on_change_product  signatures not supported
model.account.invoice.line.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.invoice.line.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.invoice.line.on_change_with_amount  signatures not supported
model.account.invoice.line.on_change_with_party_lang  signatures not supported
model.account.invoice.line.delete  signatures not supported
model.country.subdivision.search  signatures not supported
model.country.subdivision.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.country.subdivision.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.country.subdivision.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.country.subdivision.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.country.subdivision.create  signatures not supported
model.country.subdivision.write  signatures not supported
model.country.subdivision.read  signatures not supported
model.country.subdivision.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.country.subdivision.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.country.subdivision.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.country.subdivision.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.country.subdivision.delete  signatures not supported
model.res.user-res.group.search  signatures not supported
model.res.user-res.group.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.res.user-res.group.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.res.user-res.group.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.res.user-res.group.create  signatures not supported
model.res.user-res.group.write  signatures not supported
model.res.user-res.group.read  signatures not supported
model.res.user-res.group.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.res.user-res.group.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.res.user-res.group.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.res.user-res.group.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.res.user-res.group.delete  signatures not supported
model.account.invoice.print_invoice_report.warning.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.invoice.print_invoice_report.warning.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.invoice.print_invoice_report.warning.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.tax.template.search  signatures not supported
model.account.tax.template.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.tax.template.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.tax.template.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.tax.template.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.tax.template.create  signatures not supported
model.account.tax.template.write  signatures not supported
model.account.tax.template.read  signatures not supported
model.account.tax.template.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.tax.template.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.tax.template.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.tax.template.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.tax.template.delete  signatures not supported
model.stock.period.cache.search  signatures not supported
model.stock.period.cache.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.stock.period.cache.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.stock.period.cache.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.stock.period.cache.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.stock.period.cache.create  signatures not supported
model.stock.period.cache.write  signatures not supported
model.stock.period.cache.read  signatures not supported
model.stock.period.cache.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.stock.period.cache.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.stock.period.cache.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.stock.period.cache.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.stock.period.cache.delete  signatures not supported
model.account.tax.rule.search  signatures not supported
model.account.tax.rule.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.tax.rule.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.tax.rule.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.tax.rule.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.tax.rule.create  signatures not supported
model.account.tax.rule.write  signatures not supported
model.account.tax.rule.read  signatures not supported
model.account.tax.rule.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.tax.rule.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.tax.rule.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.tax.rule.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.tax.rule.delete  signatures not supported
model.product.product.search  signatures not supported
model.product.product.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.product.product.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.product.product.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.product.product.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.product.product.on_change_with_sale_uom  signatures not supported
model.product.product.copy  signatures not supported
model.product.product.write  signatures not supported
model.product.product.read  signatures not supported
model.product.product.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.product.product.create  signatures not supported
model.product.product.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.product.product.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.product.product.delete  signatures not supported
model.account.invoice.payment_term.search  signatures not supported
model.account.invoice.payment_term.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.invoice.payment_term.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.invoice.payment_term.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.invoice.payment_term.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.invoice.payment_term.create  signatures not supported
model.account.invoice.payment_term.write  signatures not supported
model.account.invoice.payment_term.read  signatures not supported
model.account.invoice.payment_term.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.invoice.payment_term.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.invoice.payment_term.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.invoice.payment_term.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.invoice.payment_term.delete  signatures not supported
model.sale.sale.on_change_party  signatures not supported
model.sale.sale.write  signatures not supported
model.sale.sale.search  signatures not supported
model.sale.sale.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.sale.sale.workflow_trigger_validate Trigger validate event

:param ids: a list of id or an id signatures not supported
model.sale.sale.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.sale.sale.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.sale.sale.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.sale.sale.create  signatures not supported
model.sale.sale.on_change_lines  signatures not supported
model.sale.sale.on_change_with_currency_digits  signatures not supported
model.sale.sale.read  signatures not supported
model.sale.sale.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.sale.sale.copy  signatures not supported
model.sale.sale.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.sale.sale.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.sale.sale.on_change_with_party_lang  signatures not supported
model.sale.sale.delete  signatures not supported
model.account.fiscalyear-account.move.line.search  signatures not supported
model.account.fiscalyear-account.move.line.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.fiscalyear-account.move.line.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.fiscalyear-account.move.line.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.fiscalyear-account.move.line.create  signatures not supported
model.account.fiscalyear-account.move.line.write  signatures not supported
model.account.fiscalyear-account.move.line.read  signatures not supported
model.account.fiscalyear-account.move.line.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.fiscalyear-account.move.line.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.fiscalyear-account.move.line.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.fiscalyear-account.move.line.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.fiscalyear-account.move.line.delete  signatures not supported
model.product.uom.category.search  signatures not supported
model.product.uom.category.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.product.uom.category.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.product.uom.category.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.product.uom.category.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.product.uom.category.create  signatures not supported
model.product.uom.category.write  signatures not supported
model.product.uom.category.read  signatures not supported
model.product.uom.category.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.product.uom.category.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.product.uom.category.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.product.uom.category.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.product.uom.category.delete  signatures not supported
model.ir.rule.group-res.user.search  signatures not supported
model.ir.rule.group-res.user.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.rule.group-res.user.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.rule.group-res.user.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.rule.group-res.user.create  signatures not supported
model.ir.rule.group-res.user.write  signatures not supported
model.ir.rule.group-res.user.read  signatures not supported
model.ir.rule.group-res.user.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.rule.group-res.user.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.rule.group-res.user.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.rule.group-res.user.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.rule.group-res.user.delete  signatures not supported
model.ir.translation.export.start.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.translation.export.start.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.translation.export.start.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.sequence.type.search  signatures not supported
model.ir.sequence.type.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.sequence.type.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.sequence.type.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.sequence.type.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.sequence.type.create  signatures not supported
model.ir.sequence.type.write  signatures not supported
model.ir.sequence.type.read  signatures not supported
model.ir.sequence.type.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.sequence.type.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.sequence.type.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.sequence.type.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.sequence.type.delete  signatures not supported
model.workflow.instance.search  signatures not supported
model.workflow.instance.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.workflow.instance.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.workflow.instance.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.workflow.instance.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.workflow.instance.read  signatures not supported
model.workflow.instance.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.workflow.instance.fields_get  signatures not supported
model.workflow.instance.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.party.party.search  signatures not supported
model.party.party.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.party.party.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.party.party.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.party.party.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.party.party.create  signatures not supported
model.party.party.write  signatures not supported
model.party.party.read  signatures not supported
model.party.party.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.party.party.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.party.party.copy  signatures not supported
model.party.party.on_change_with_vat_code  signatures not supported
model.party.party.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.party.party.delete  signatures not supported
model.ir.translation.clean.start.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.translation.clean.start.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.translation.clean.start.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.workflow.activity.search  signatures not supported
model.workflow.activity.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.workflow.activity.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.workflow.activity.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.workflow.activity.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.workflow.activity.create  signatures not supported
model.workflow.activity.write  signatures not supported
model.workflow.activity.read  signatures not supported
model.workflow.activity.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.workflow.activity.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.workflow.activity.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.workflow.activity.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.workflow.activity.delete  signatures not supported
model.product.template.search  signatures not supported
model.product.template.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.product.template.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.product.template.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.product.template.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.product.template.on_change_with_sale_uom  signatures not supported
model.product.template.copy  signatures not supported
model.product.template.write  signatures not supported
model.product.template.read  signatures not supported
model.product.template.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.product.template.create  signatures not supported
model.product.template.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.product.template.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.product.template.delete  signatures not supported
model.ir.module.module.install_upgrade.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.module.module.install_upgrade.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.module.module.install_upgrade.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.cron.search  signatures not supported
model.ir.cron.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.cron.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.cron.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.cron.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.cron.create  signatures not supported
model.ir.cron.write  signatures not supported
model.ir.cron.read  signatures not supported
model.ir.cron.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.cron.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.cron.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.cron.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.cron.delete  signatures not supported
model.stock.shipment.in.return.assign.assign_failed.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.stock.shipment.in.return.assign.assign_failed.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.stock.shipment.in.return.assign.assign_failed.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.workflow.transition.search  signatures not supported
model.workflow.transition.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.workflow.transition.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.workflow.transition.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.workflow.transition.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.workflow.transition.create  signatures not supported
model.workflow.transition.write  signatures not supported
model.workflow.transition.read  signatures not supported
model.workflow.transition.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.workflow.transition.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.workflow.transition.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.workflow.transition.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.workflow.transition.delete  signatures not supported
model.ir.model.field.access.search  signatures not supported
model.ir.model.field.access.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.model.field.access.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.model.field.access.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.model.field.access.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.model.field.access.create  signatures not supported
model.ir.model.field.access.write  signatures not supported
model.ir.model.field.access.read  signatures not supported
model.ir.model.field.access.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.model.field.access.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.model.field.access.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.model.field.access.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.model.field.access.delete  signatures not supported
model.account.invoice.tax.search  signatures not supported
model.account.invoice.tax.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.invoice.tax.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.invoice.tax.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.invoice.tax.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.invoice.tax.create  signatures not supported
model.account.invoice.tax.write  signatures not supported
model.account.invoice.tax.read  signatures not supported
model.account.invoice.tax.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.invoice.tax.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.invoice.tax.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.invoice.tax.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.invoice.tax.delete  signatures not supported
model.account.invoice.pay_invoice.init.on_change_with_currency_digits  signatures not supported
model.account.invoice.pay_invoice.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.invoice.pay_invoice.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.invoice.pay_invoice.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.invoice.payment_term.line.delay.search  signatures not supported
model.account.invoice.payment_term.line.delay.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.invoice.payment_term.line.delay.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.invoice.payment_term.line.delay.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.invoice.payment_term.line.delay.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.invoice.payment_term.line.delay.create  signatures not supported
model.account.invoice.payment_term.line.delay.write  signatures not supported
model.account.invoice.payment_term.line.delay.read  signatures not supported
model.account.invoice.payment_term.line.delay.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.invoice.payment_term.line.delay.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.invoice.payment_term.line.delay.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.invoice.payment_term.line.delay.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.invoice.payment_term.line.delay.delete  signatures not supported
model.product.category.search  signatures not supported
model.product.category.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.product.category.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.product.category.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.product.category.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.product.category.create  signatures not supported
model.product.category.write  signatures not supported
model.product.category.read  signatures not supported
model.product.category.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.product.category.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.product.category.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.product.category.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.product.category.delete  signatures not supported
model.res.request.history.search  signatures not supported
model.res.request.history.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.res.request.history.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.res.request.history.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.res.request.history.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.res.request.history.create  signatures not supported
model.res.request.history.write  signatures not supported
model.res.request.history.read  signatures not supported
model.res.request.history.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.res.request.history.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.res.request.history.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.res.request.history.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.res.request.history.delete  signatures not supported
model.stock.shipment.out.search  signatures not supported
model.stock.shipment.out.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.stock.shipment.out.button_draft  signatures not supported
model.stock.shipment.out.workflow_trigger_validate Trigger validate event

:param ids: a list of id or an id signatures not supported
model.stock.shipment.out.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.stock.shipment.out.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.stock.shipment.out.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.stock.shipment.out.create  signatures not supported
model.stock.shipment.out.write  signatures not supported
model.stock.shipment.out.read  signatures not supported
model.stock.shipment.out.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.stock.shipment.out.on_change_customer  signatures not supported
model.stock.shipment.out.copy  signatures not supported
model.stock.shipment.out.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.stock.shipment.out.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.stock.shipment.out.delete  signatures not supported
model.stock.shipment.out.return.search  signatures not supported
model.stock.shipment.out.return.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.stock.shipment.out.return.button_draft  signatures not supported
model.stock.shipment.out.return.workflow_trigger_validate Trigger validate event

:param ids: a list of id or an id signatures not supported
model.stock.shipment.out.return.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.stock.shipment.out.return.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.stock.shipment.out.return.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.stock.shipment.out.return.create  signatures not supported
model.stock.shipment.out.return.write  signatures not supported
model.stock.shipment.out.return.read  signatures not supported
model.stock.shipment.out.return.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.stock.shipment.out.return.on_change_customer  signatures not supported
model.stock.shipment.out.return.copy  signatures not supported
model.stock.shipment.out.return.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.stock.shipment.out.return.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.stock.shipment.out.return.delete  signatures not supported
model.account.invoice.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.invoice.button_draft  signatures not supported
model.account.invoice.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.invoice.on_change_with_currency_digits  signatures not supported
model.account.invoice.copy  signatures not supported
model.account.invoice.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.invoice.on_change_lines  signatures not supported
model.account.invoice.on_change_with_party_lang  signatures not supported
model.account.invoice.on_change_taxes  signatures not supported
model.account.invoice.on_change_party  signatures not supported
model.account.invoice.search  signatures not supported
model.account.invoice.workflow_trigger_validate Trigger validate event

:param ids: a list of id or an id signatures not supported
model.account.invoice.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.invoice.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.invoice.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.invoice.write  signatures not supported
model.account.invoice.read  signatures not supported
model.account.invoice.on_change_with_currency_date  signatures not supported
model.account.invoice.on_change_type  signatures not supported
model.account.invoice.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.invoice.create  signatures not supported
model.account.invoice.delete  signatures not supported
model.product.category-customer-account.tax.search  signatures not supported
model.product.category-customer-account.tax.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.product.category-customer-account.tax.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.product.category-customer-account.tax.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.product.category-customer-account.tax.create  signatures not supported
model.product.category-customer-account.tax.write  signatures not supported
model.product.category-customer-account.tax.read  signatures not supported
model.product.category-customer-account.tax.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.product.category-customer-account.tax.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.product.category-customer-account.tax.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.product.category-customer-account.tax.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.product.category-customer-account.tax.delete  signatures not supported
model.ir.model.print_model_graph.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.model.print_model_graph.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.model.print_model_graph.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.account-account.tax.search  signatures not supported
model.account.account-account.tax.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.account-account.tax.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.account-account.tax.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.account-account.tax.create  signatures not supported
model.account.account-account.tax.write  signatures not supported
model.account.account-account.tax.read  signatures not supported
model.account.account-account.tax.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.account-account.tax.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.account-account.tax.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.account-account.tax.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.account-account.tax.delete  signatures not supported
model.account.invoice-account.move.line.search  signatures not supported
model.account.invoice-account.move.line.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.invoice-account.move.line.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.invoice-account.move.line.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.invoice-account.move.line.create  signatures not supported
model.account.invoice-account.move.line.write  signatures not supported
model.account.invoice-account.move.line.read  signatures not supported
model.account.invoice-account.move.line.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.invoice-account.move.line.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.invoice-account.move.line.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.invoice-account.move.line.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.invoice-account.move.line.delete  signatures not supported
model.ir.module.module.button_install_cancel  signatures not supported
model.ir.module.module.search  signatures not supported
model.ir.module.module.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.module.module.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.module.module.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.module.module.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.module.module.create  signatures not supported
model.ir.module.module.button_upgrade  signatures not supported
model.ir.module.module.button_install  signatures not supported
model.ir.module.module.button_upgrade_cancel  signatures not supported
model.ir.module.module.write  signatures not supported
model.ir.module.module.read  signatures not supported
model.ir.module.module.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.module.module.button_uninstall_cancel  signatures not supported
model.ir.module.module.button_uninstall  signatures not supported
model.ir.module.module.on_write  signatures not supported
model.ir.module.module.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.module.module.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.module.module.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.module.module.delete  signatures not supported
model.account.account.open_aged_balance.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.account.open_aged_balance.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.account.open_aged_balance.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.fiscalyear.search  signatures not supported
model.account.fiscalyear.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.fiscalyear.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.fiscalyear.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.fiscalyear.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.fiscalyear.create  signatures not supported
model.account.fiscalyear.reopen Re-open a fiscal year

:param fiscalyear_id: the fiscal year id signatures not supported
model.account.fiscalyear.write  signatures not supported
model.account.fiscalyear.read  signatures not supported
model.account.fiscalyear.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.fiscalyear.create_period Create periods for the fiscal years with month interval signatures not supported
model.account.fiscalyear.close Close a fiscal year

:param fiscalyear_id: the fiscal year id signatures not supported
model.account.fiscalyear.create_period_3 Create periods for the fiscal years with 3 months interval signatures not supported
model.account.fiscalyear.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.fiscalyear.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.fiscalyear.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.fiscalyear.delete  signatures not supported
model.account.account.update_chart_account.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.account.update_chart_account.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.account.update_chart_account.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.res.user.config.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.res.user.config.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.res.user.config.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.workflow.workitem.search  signatures not supported
model.workflow.workitem.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.workflow.workitem.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.workflow.workitem.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.workflow.workitem.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.workflow.workitem.read  signatures not supported
model.workflow.workitem.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.workflow.workitem.fields_get  signatures not supported
model.workflow.workitem.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.move.unreconcile_lines.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.move.unreconcile_lines.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.move.unreconcile_lines.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.sale.handle.shipment.exception.ask.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.sale.handle.shipment.exception.ask.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.sale.handle.shipment.exception.ask.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.sequence.strict.search  signatures not supported
model.ir.sequence.strict.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.sequence.strict.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.sequence.strict.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.sequence.strict.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.sequence.strict.create  signatures not supported
model.ir.sequence.strict.write  signatures not supported
model.ir.sequence.strict.read  signatures not supported
model.ir.sequence.strict.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.sequence.strict.code_get  signatures not supported
model.ir.sequence.strict.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.sequence.strict.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.sequence.strict.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.sequence.strict.delete  signatures not supported
model.ir.export.line.search  signatures not supported
model.ir.export.line.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.export.line.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.export.line.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.export.line.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.export.line.create  signatures not supported
model.ir.export.line.write  signatures not supported
model.ir.export.line.read  signatures not supported
model.ir.export.line.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.export.line.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.export.line.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.export.line.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.export.line.delete  signatures not supported
model.sale.handle.invoice.exception.ask.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.sale.handle.invoice.exception.ask.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.sale.handle.invoice.exception.ask.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.attachment.on_change_with_summary  signatures not supported
model.ir.attachment.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.attachment.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.attachment.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.attachment.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.attachment.create  signatures not supported
model.ir.attachment.search  signatures not supported
model.ir.attachment.write  signatures not supported
model.ir.attachment.read  signatures not supported
model.ir.attachment.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.attachment.models_get  signatures not supported
model.ir.attachment.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.attachment.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.attachment.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.attachment.delete  signatures not supported
model.country.country.search  signatures not supported
model.country.country.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.country.country.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.country.country.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.country.country.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.country.country.create  signatures not supported
model.country.country.write  signatures not supported
model.country.country.read  signatures not supported
model.country.country.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.country.country.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.country.country.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.country.country.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.country.country.delete  signatures not supported
model.ir.ui.view_tree_width.search  signatures not supported
model.ir.ui.view_tree_width.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.ui.view_tree_width.set_width Set width for the current user on the model.
fields is a dictionary with key: field name and value: width. signatures not supported
model.ir.ui.view_tree_width.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.ui.view_tree_width.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.ui.view_tree_width.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.ui.view_tree_width.create  signatures not supported
model.ir.ui.view_tree_width.write  signatures not supported
model.ir.ui.view_tree_width.read  signatures not supported
model.ir.ui.view_tree_width.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.ui.view_tree_width.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.ui.view_tree_width.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.ui.view_tree_width.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.ui.view_tree_width.delete  signatures not supported
model.res.group.search  signatures not supported
model.res.group.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.res.group.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.res.group.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.res.group.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.res.group.create  signatures not supported
model.res.group.write  signatures not supported
model.res.group.read  signatures not supported
model.res.group.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.res.group.copy  signatures not supported
model.res.group.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.res.group.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.res.group.delete  signatures not supported
model.account.journal.view.column.search  signatures not supported
model.account.journal.view.column.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.journal.view.column.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.journal.view.column.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.journal.view.column.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.journal.view.column.create  signatures not supported
model.account.journal.view.column.write  signatures not supported
model.account.journal.view.column.read  signatures not supported
model.account.journal.view.column.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.journal.view.column.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.journal.view.column.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.journal.view.column.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.journal.view.column.delete  signatures not supported
model.res.user.warning.search  signatures not supported
model.res.user.warning.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.res.user.warning.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.res.user.warning.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.res.user.warning.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.res.user.warning.create  signatures not supported
model.res.user.warning.write  signatures not supported
model.res.user.warning.read  signatures not supported
model.res.user.warning.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.res.user.warning.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.res.user.warning.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.res.user.warning.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.res.user.warning.delete  signatures not supported
model.ir.sequence.type-res.group.search  signatures not supported
model.ir.sequence.type-res.group.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.sequence.type-res.group.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.sequence.type-res.group.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.sequence.type-res.group.create  signatures not supported
model.ir.sequence.type-res.group.write  signatures not supported
model.ir.sequence.type-res.group.read  signatures not supported
model.ir.sequence.type-res.group.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.sequence.type-res.group.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.sequence.type-res.group.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.sequence.type-res.group.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.sequence.type-res.group.delete  signatures not supported
model.currency.currency.rate.search  signatures not supported
model.currency.currency.rate.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.currency.currency.rate.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.currency.currency.rate.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.currency.currency.rate.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.currency.currency.rate.create  signatures not supported
model.currency.currency.rate.write  signatures not supported
model.currency.currency.rate.read  signatures not supported
model.currency.currency.rate.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.currency.currency.rate.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.currency.currency.rate.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.currency.currency.rate.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.currency.currency.rate.delete  signatures not supported
model.ir.cron-company.company.search  signatures not supported
model.ir.cron-company.company.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.cron-company.company.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.cron-company.company.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.cron-company.company.create  signatures not supported
model.ir.cron-company.company.write  signatures not supported
model.ir.cron-company.company.read  signatures not supported
model.ir.cron-company.company.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.cron-company.company.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.cron-company.company.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.cron-company.company.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.cron-company.company.delete  signatures not supported
model.account.account.create_chart_account.properties.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.account.create_chart_account.properties.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.account.create_chart_account.properties.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.translation.search  signatures not supported
model.ir.translation.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.translation.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.translation.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.translation.get_language  signatures not supported
model.ir.translation.create  signatures not supported
model.ir.translation.write  signatures not supported
model.ir.translation.read  signatures not supported
model.ir.translation.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.translation.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.translation.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.translation.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.translation.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.translation.delete  signatures not supported
model.webdav.collection.search  signatures not supported
model.webdav.collection.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.webdav.collection.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.webdav.collection.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.webdav.collection.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.webdav.collection.create  signatures not supported
model.webdav.collection.write  signatures not supported
model.webdav.collection.read  signatures not supported
model.webdav.collection.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.webdav.collection.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.webdav.collection.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.webdav.collection.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.webdav.collection.delete  signatures not supported
model.ir.translation.export.init.get_language  signatures not supported
model.ir.translation.export.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.translation.export.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.translation.export.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.translation.export.init.get_module  signatures not supported
model.account.tax.group.search  signatures not supported
model.account.tax.group.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.tax.group.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.account.tax.group.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.account.tax.group.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.account.tax.group.create  signatures not supported
model.account.tax.group.write  signatures not supported
model.account.tax.group.read  signatures not supported
model.account.tax.group.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.account.tax.group.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.account.tax.group.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.tax.group.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.tax.group.delete  signatures not supported
model.ir.action.act_window.search  signatures not supported
model.ir.action.act_window.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.action.act_window.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.action.act_window.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.action.act_window.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.action.act_window.create  signatures not supported
model.ir.action.act_window.write  signatures not supported
model.ir.action.act_window.read  signatures not supported
model.ir.action.act_window.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.action.act_window.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.action.act_window.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.action.act_window.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.action.act_window.delete  signatures not supported
model.ir.cache.search  signatures not supported
model.ir.cache.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.cache.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.cache.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.cache.create  signatures not supported
model.ir.cache.write  signatures not supported
model.ir.cache.read  signatures not supported
model.ir.cache.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.cache.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.cache.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.cache.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.cache.delete  signatures not supported
model.stock.product_stock_date.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.stock.product_stock_date.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.stock.product_stock_date.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.product.category-supplier-account.tax.search  signatures not supported
model.product.category-supplier-account.tax.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.product.category-supplier-account.tax.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.product.category-supplier-account.tax.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.product.category-supplier-account.tax.create  signatures not supported
model.product.category-supplier-account.tax.write  signatures not supported
model.product.category-supplier-account.tax.read  signatures not supported
model.product.category-supplier-account.tax.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.product.category-supplier-account.tax.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.product.category-supplier-account.tax.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.product.category-supplier-account.tax.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.product.category-supplier-account.tax.delete  signatures not supported
model.account.move.open_reconcile_lines.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.move.open_reconcile_lines.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.move.open_reconcile_lines.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.account.account.create_chart_account.init.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.account.create_chart_account.init.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.account.create_chart_account.init.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.action.keyword.search  signatures not supported
model.ir.action.keyword.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.action.keyword.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.action.keyword.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.action.keyword.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.action.keyword.create  signatures not supported
model.ir.action.keyword.get_keyword  signatures not supported
model.ir.action.keyword.write  signatures not supported
model.ir.action.keyword.read  signatures not supported
model.ir.action.keyword.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.action.keyword.models_get  signatures not supported
model.ir.action.keyword.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.action.keyword.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.action.keyword.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.action.keyword.delete  signatures not supported
model.party.category.search  signatures not supported
model.party.category.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.party.category.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.party.category.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.party.category.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.party.category.create  signatures not supported
model.party.category.write  signatures not supported
model.party.category.read  signatures not supported
model.party.category.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.party.category.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.party.category.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.party.category.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.party.category.delete  signatures not supported
model.party.party-party.category.search  signatures not supported
model.party.party-party.category.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.party.party-party.category.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.party.party-party.category.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.party.party-party.category.create  signatures not supported
model.party.party-party.category.write  signatures not supported
model.party.party-party.category.read  signatures not supported
model.party.party-party.category.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.party.party-party.category.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.party.party-party.category.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.party.party-party.category.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.party.party-party.category.delete  signatures not supported
model.sale.sale-account.invoice.search  signatures not supported
model.sale.sale-account.invoice.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.sale.sale-account.invoice.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.sale.sale-account.invoice.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.sale.sale-account.invoice.create  signatures not supported
model.sale.sale-account.invoice.write  signatures not supported
model.sale.sale-account.invoice.read  signatures not supported
model.sale.sale-account.invoice.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.sale.sale-account.invoice.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.sale.sale-account.invoice.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.sale.sale-account.invoice.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.sale.sale-account.invoice.delete  signatures not supported
model.ir.model.field.search  signatures not supported
model.ir.model.field.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.model.field.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.model.field.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.model.field.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.model.field.create  signatures not supported
model.ir.model.field.write  signatures not supported
model.ir.model.field.read  signatures not supported
model.ir.model.field.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.model.field.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.model.field.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.model.field.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.model.field.delete  signatures not supported
model.res.request.link.search  signatures not supported
model.res.request.link.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.res.request.link.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.res.request.link.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.res.request.link.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.res.request.link.create  signatures not supported
model.res.request.link.write  signatures not supported
model.res.request.link.read  signatures not supported
model.res.request.link.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.res.request.link.models_get  signatures not supported
model.res.request.link.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.res.request.link.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.res.request.link.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.res.request.link.delete  signatures not supported
model.ir.model.search  signatures not supported
model.ir.model.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.ir.model.export_data Return list of list of values for each id in ids.
The list of values follows fields_names.
Relational fields are defined with '/' at any depth.

:param ids: a list of ids
:param fields_names: a list of field names
:return: a list of list of values for each id in ids signatures not supported
model.ir.model.search_read Call search and read functions at once.
Useful for the client to reduce the number of calls.

:param domain: a domain like in search
:param offset: an integer to specify the offset for the result
:param limit: an integer to specify the number of records
:param order: a list of tuples that are constructed like this:
    ('field name', 'DESC|ASC')
    allowing to to specify the order of result
:param fields_names: fields names to read if None read all fields
:return: a list of dictionaries or a dictionary if limit is 1
    the dictionaries will have field names as key
    and field values as value signatures not supported
model.ir.model.import_data Create records for all values in datas.
The field names of values must be defined in fields_names.

:param fields_names: a list of fields names
:param datas: the data to import
:return: a tuple with
    - the number of records imported
    - the last values if failed
    - the exception if failed
    - the warning if failed signatures not supported
model.ir.model.create  signatures not supported
model.ir.model.write  signatures not supported
model.ir.model.read  signatures not supported
model.ir.model.search_count Return the number of records that match the domain. (See search)

:param domain: a domain like in search
:return: an integer signatures not supported
model.ir.model.copy Duplicate the record(s) in ids.

:param ids: a list of ids or an id
:param default: a dictionary with field name as keys and
    new value for the field as value
:return: a list of new ids or the new id signatures not supported
model.ir.model.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.ir.model.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
model.ir.model.delete  signatures not supported
model.account.move.reconcile_lines.writeoff.fields_view_get Return a view definition.

:param view_id: the id of the view, if None the first one will be used
:param view_type: the type of the view if view_id is None
:param toolbar: if True the result will contain a toolbar key with
    keyword action definitions for the view
:param hexmd5: if filled, the function will return True if the result
    has the same md5
:return: a dictionary with keys:
   - model: the model name
   - arch: the xml description of the view
   - fields: a dictionary with the definition of each field in the view
   - toolbar: a dictionary with the keyword action definitions
   - md5: the check sum of the dictionary without this checksum signatures not supported
model.account.move.reconcile_lines.writeoff.fields_get Return the definition of each field on the model.

:param fields_names: a list of field names or None for all fields
:return: a dictionary with field name as key and definition as value signatures not supported
model.account.move.reconcile_lines.writeoff.default_get Return a dict with the default values for each field in fields_names.

:param fields_names: a list of fields names
:param with_rec_name: a boolean to add rec_name value
:return: a dictionary with field name as key
    and default value as value signatures not supported
wizard.ir.module.module.config_wizard.create  signatures not supported
wizard.ir.module.module.config_wizard.execute  signatures not supported
wizard.ir.module.module.config_wizard.delete  signatures not supported
wizard.party.check_vies.create  signatures not supported
wizard.party.check_vies.execute  signatures not supported
wizard.party.check_vies.delete  signatures not supported
wizard.account.move.open_account.create  signatures not supported
wizard.account.move.open_account.execute  signatures not supported
wizard.account.move.open_account.delete  signatures not supported
wizard.account.fiscalyear.close_fiscalyear.create  signatures not supported
wizard.account.fiscalyear.close_fiscalyear.execute  signatures not supported
wizard.account.fiscalyear.close_fiscalyear.delete  signatures not supported
wizard.account.journal.reopen_period.create  signatures not supported
wizard.account.journal.reopen_period.execute  signatures not supported
wizard.account.journal.reopen_period.delete  signatures not supported
wizard.account.invoice.print_invoice_report.create  signatures not supported
wizard.account.invoice.print_invoice_report.execute  signatures not supported
wizard.account.invoice.print_invoice_report.delete  signatures not supported
wizard.account.period.reopen_period.create  signatures not supported
wizard.account.period.reopen_period.execute  signatures not supported
wizard.account.period.reopen_period.delete  signatures not supported
wizard.account.account.open_income_statement.create  signatures not supported
wizard.account.account.open_income_statement.execute  signatures not supported
wizard.account.account.open_income_statement.delete  signatures not supported
wizard.res.user.config.create  signatures not supported
wizard.res.user.config.execute  signatures not supported
wizard.res.user.config.delete  signatures not supported
wizard.account.account.update_chart_account.create  signatures not supported
wizard.account.account.update_chart_account.execute  signatures not supported
wizard.account.account.update_chart_account.delete  signatures not supported
wizard.ir.ui.view_sc.open.create  signatures not supported
wizard.ir.ui.view_sc.open.execute  signatures not supported
wizard.ir.ui.view_sc.open.delete  signatures not supported
wizard.ir.translation.set_report.create  signatures not supported
wizard.ir.translation.set_report.execute  signatures not supported
wizard.ir.translation.set_report.delete  signatures not supported
wizard.account.journal.close_period.create  signatures not supported
wizard.account.journal.close_period.execute  signatures not supported
wizard.account.journal.close_period.delete  signatures not supported
wizard.account.move.unreconcile_lines.create  signatures not supported
wizard.account.move.unreconcile_lines.execute  signatures not supported
wizard.account.move.unreconcile_lines.delete  signatures not supported
wizard.account.account.open_third_party_balance.create  signatures not supported
wizard.account.account.open_third_party_balance.execute  signatures not supported
wizard.account.account.open_third_party_balance.delete  signatures not supported
wizard.account.invoice.pay_invoice.create  signatures not supported
wizard.account.invoice.pay_invoice.execute  signatures not supported
wizard.account.invoice.pay_invoice.delete  signatures not supported
wizard.stock.shipment.out.return.create.create  signatures not supported
wizard.stock.shipment.out.return.create.execute  signatures not supported
wizard.stock.shipment.out.return.create.delete  signatures not supported
wizard.company.company.config.create  signatures not supported
wizard.company.company.config.execute  signatures not supported
wizard.company.company.config.delete  signatures not supported
wizard.ir.model.print_model_graph.create  signatures not supported
wizard.ir.model.print_model_graph.execute  signatures not supported
wizard.ir.model.print_model_graph.delete  signatures not supported
wizard.account.move.print_general_journal.create  signatures not supported
wizard.account.move.print_general_journal.execute  signatures not supported
wizard.account.move.print_general_journal.delete  signatures not supported
wizard.stock.product.open.create  signatures not supported
wizard.stock.product.open.execute  signatures not supported
wizard.stock.product.open.delete  signatures not supported
wizard.stock.shipment.out.assign.create  signatures not supported
wizard.stock.shipment.out.assign.execute  signatures not supported
wizard.stock.shipment.out.assign.delete  signatures not supported
wizard.account.period.close_period.create  signatures not supported
wizard.account.period.close_period.execute  signatures not supported
wizard.account.period.close_period.delete  signatures not supported
wizard.account.move.open_reconcile_lines.create  signatures not supported
wizard.account.move.open_reconcile_lines.execute  signatures not supported
wizard.account.move.open_reconcile_lines.delete  signatures not supported
wizard.ir.translation.clean.create  signatures not supported
wizard.ir.translation.clean.execute  signatures not supported
wizard.ir.translation.clean.delete  signatures not supported
wizard.account.account.open_aged_balance.create  signatures not supported
wizard.account.account.open_aged_balance.execute  signatures not supported
wizard.account.account.open_aged_balance.delete  signatures not supported
wizard.account.account.open_chart_account.create  signatures not supported
wizard.account.account.open_chart_account.execute  signatures not supported
wizard.account.account.open_chart_account.delete  signatures not supported
wizard.ir.module.module.install_upgrade.create  signatures not supported
wizard.ir.module.module.install_upgrade.execute  signatures not supported
wizard.ir.module.module.install_upgrade.delete  signatures not supported
wizard.ir.translation.export.create  signatures not supported
wizard.ir.translation.export.execute  signatures not supported
wizard.ir.translation.export.delete  signatures not supported
wizard.account.move.reconcile_lines.create  signatures not supported
wizard.account.move.reconcile_lines.execute  signatures not supported
wizard.account.move.reconcile_lines.delete  signatures not supported
wizard.account.account.create_chart_account.create  signatures not supported
wizard.account.account.create_chart_account.execute  signatures not supported
wizard.account.account.create_chart_account.delete  signatures not supported
wizard.account.move.open_journal.create  signatures not supported
wizard.account.move.open_journal.execute  signatures not supported
wizard.account.move.open_journal.delete  signatures not supported
wizard.ir.module.module.config.create  signatures not supported
wizard.ir.module.module.config.execute  signatures not supported
wizard.ir.module.module.config.delete  signatures not supported
wizard.stock.shipment.internal.assign.create  signatures not supported
wizard.stock.shipment.internal.assign.execute  signatures not supported
wizard.stock.shipment.internal.assign.delete  signatures not supported
wizard.account.account.open_balance_sheet.create  signatures not supported
wizard.account.account.open_balance_sheet.execute  signatures not supported
wizard.account.account.open_balance_sheet.delete  signatures not supported
wizard.account.tax.open_code.create  signatures not supported
wizard.account.tax.open_code.execute  signatures not supported
wizard.account.tax.open_code.delete  signatures not supported
wizard.account.account.print_trial_balance.create  signatures not supported
wizard.account.account.print_trial_balance.execute  signatures not supported
wizard.account.account.print_trial_balance.delete  signatures not supported
wizard.ir.translation.update.create  signatures not supported
wizard.ir.translation.update.execute  signatures not supported
wizard.ir.translation.update.delete  signatures not supported
wizard.stock.location.open.create  signatures not supported
wizard.stock.location.open.execute  signatures not supported
wizard.stock.location.open.delete  signatures not supported
wizard.ir.ui.view_sc.add.create  signatures not supported
wizard.ir.ui.view_sc.add.execute  signatures not supported
wizard.ir.ui.view_sc.add.delete  signatures not supported
wizard.stock.inventory.complete.create  signatures not supported
wizard.stock.inventory.complete.execute  signatures not supported
wizard.stock.inventory.complete.delete  signatures not supported
wizard.account.account.print_general_ledger.create  signatures not supported
wizard.account.account.print_general_ledger.execute  signatures not supported
wizard.account.account.print_general_ledger.delete  signatures not supported
wizard.sale.handle.invoice.exception.create  signatures not supported
wizard.sale.handle.invoice.exception.execute  signatures not supported
wizard.sale.handle.invoice.exception.delete  signatures not supported
wizard.sale.handle.shipment.exception.create  signatures not supported
wizard.sale.handle.shipment.exception.execute  signatures not supported
wizard.sale.handle.shipment.exception.delete  signatures not supported
wizard.stock.shipment.in.return.assign.create  signatures not supported
wizard.stock.shipment.in.return.assign.execute  signatures not supported
wizard.stock.shipment.in.return.assign.delete  signatures not supported
wizard.account.tax.open_chart_code.create  signatures not supported
wizard.account.tax.open_chart_code.execute  signatures not supported
wizard.account.tax.open_chart_code.delete  signatures not supported
wizard.account.invoice.credit_invoice.create  signatures not supported
wizard.account.invoice.credit_invoice.execute  signatures not supported
wizard.account.invoice.credit_invoice.delete  signatures not supported
wizard.sale.open_customer.create  signatures not supported
wizard.sale.open_customer.execute  signatures not supported
wizard.sale.open_customer.delete  signatures not supported
report.account.account.third_party_balance.execute Execute the report.

:param ids: a list of record ids on which execute report
:param datas: a dictionary with datas that will be set in
    local context of the report
:return: a tuple with:
    report type,
    base64 encoded data,
    a boolean to direct print,
    the report name signatures not supported
report.account.account.general_ledger.execute Execute the report.

:param ids: a list of record ids on which execute report
:param datas: a dictionary with datas that will be set in
    local context of the report
:return: a tuple with:
    report type,
    base64 encoded data,
    a boolean to direct print,
    the report name signatures not supported
report.workflow.instance.graph.execute  signatures not supported
report.ir.model.graph.execute  signatures not supported
report.sale.sale.execute Execute the report.

:param ids: a list of record ids on which execute report
:param datas: a dictionary with datas that will be set in
    local context of the report
:return: a tuple with:
    report type,
    base64 encoded data,
    a boolean to direct print,
    the report name signatures not supported
report.party.label.execute Execute the report.

:param ids: a list of record ids on which execute report
:param datas: a dictionary with datas that will be set in
    local context of the report
:return: a tuple with:
    report type,
    base64 encoded data,
    a boolean to direct print,
    the report name signatures not supported
report.account.move.general_journal.execute Execute the report.

:param ids: a list of record ids on which execute report
:param datas: a dictionary with datas that will be set in
    local context of the report
:return: a tuple with:
    report type,
    base64 encoded data,
    a boolean to direct print,
    the report name signatures not supported
report.stock.shipment.out.picking_list.execute Execute the report.

:param ids: a list of record ids on which execute report
:param datas: a dictionary with datas that will be set in
    local context of the report
:return: a tuple with:
    report type,
    base64 encoded data,
    a boolean to direct print,
    the report name signatures not supported
report.account.account.aged_balance.execute Execute the report.

:param ids: a list of record ids on which execute report
:param datas: a dictionary with datas that will be set in
    local context of the report
:return: a tuple with:
    report type,
    base64 encoded data,
    a boolean to direct print,
    the report name signatures not supported
report.stock.shipment.internal.report.execute Execute the report.

:param ids: a list of record ids on which execute report
:param datas: a dictionary with datas that will be set in
    local context of the report
:return: a tuple with:
    report type,
    base64 encoded data,
    a boolean to direct print,
    the report name signatures not supported
report.account.invoice.execute  signatures not supported
report.account.account.trial_balance.execute Execute the report.

:param ids: a list of record ids on which execute report
:param datas: a dictionary with datas that will be set in
    local context of the report
:return: a tuple with:
    report type,
    base64 encoded data,
    a boolean to direct print,
    the report name signatures not supported
report.stock.shipment.in.restocking_list.execute Execute the report.

:param ids: a list of record ids on which execute report
:param datas: a dictionary with datas that will be set in
    local context of the report
:return: a tuple with:
    report type,
    base64 encoded data,
    a boolean to direct print,
    the report name signatures not supported
report.stock.shipment.out.return.restocking_list.execute Execute the report.

:param ids: a list of record ids on which execute report
:param datas: a dictionary with datas that will be set in
    local context of the report
:return: a tuple with:
    report type,
    base64 encoded data,
    a boolean to direct print,
    the report name signatures not supported
report.party.letter.execute Execute the report.

:param ids: a list of record ids on which execute report
:param datas: a dictionary with datas that will be set in
    local context of the report
:return: a tuple with:
    report type,
    base64 encoded data,
    a boolean to direct print,
    the report name signatures not supported
report.stock.shipment.out.delivery_note.execute Execute the report.

:param ids: a list of record ids on which execute report
:param datas: a dictionary with datas that will be set in
    local context of the report
:return: a tuple with:
    report type,
    base64 encoded data,
    a boolean to direct print,
    the report name signatures not supported
